<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3采坑记录</title>
      <link href="/2024/02/23/vue3%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/02/23/vue3%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="vue3-使用pinia-持久化失效"><a href="#vue3-使用pinia-持久化失效" class="headerlink" title="vue3 使用pinia 持久化失效"></a>vue3 使用pinia 持久化失效</h1><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li>vue3</li><li>pinia<ul><li>pinia-plugin-persistedstate</li></ul></li><li>router</li></ul><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>设置动态路由<br>在页面刷新的时候会初始化router,所有在router的配置文件中进行了初始化，在这之中使用了store,导致了store 持久化失效</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在<code>app.use(router)</code> 之前进行了设置动态路由，在这之中使用了store,导致失效</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在router 初始化之后再使用store.</p><blockquote><p>提示：这其中并不会报错提示</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
            <tag> vue-router </tag>
            
            <tag> pinia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用husky hook</title>
      <link href="/2024/02/09/git%E4%BD%BF%E7%94%A8husky-hook/"/>
      <url>/2024/02/09/git%E4%BD%BF%E7%94%A8husky-hook/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文介绍 vue3-element-admin 如何通过 Husky + Lint-staged + Commitlint + Commitizen + cz-git 来配置 Git 提交代码规范。</p><p>核心内容是配置 Husky 的 pre-commit 和 commit-msg 两个钩子:</p><p>pre-commit：Husky + Lint-staged 整合实现 Git 提交前代码规范检测/格式化 (前提：ESlint + Prettier + Stylelint 代码统一规范)；</p><p>commit-msg: Husky + Commitlint + Commitizen + cz-git 整合实现生成规范化且高度自定义的 Git commit message。</p><h1 id="husky"><a href="#husky" class="headerlink" title="husky"></a>husky</h1><h2 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky-init &amp;&amp; npm install</span><br></pre></td></tr></table></figure><h1 id="pre-commit-husky-Lint-staged"><a href="#pre-commit-husky-Lint-staged" class="headerlink" title="pre-commit:husky + Lint-staged"></a>pre-commit:husky + Lint-staged</h1><h2 id="Lint-staged-安装"><a href="#Lint-staged-安装" class="headerlink" title="Lint-staged 安装"></a>Lint-staged 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D lint-staged</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在 package.json 中配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint-staged&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;*.&#123;js,ts&#125;&quot;</span>: [</span><br><span class="line">     <span class="string">&quot;eslint --fix&quot;</span>,</span><br><span class="line">     <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">&quot;*.&#123;cjs,json&#125;&quot;</span>: [</span><br><span class="line">     <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">&quot;*.&#123;vue,html&#125;&quot;</span>: [</span><br><span class="line">     <span class="string">&quot;eslint --fix&quot;</span>,</span><br><span class="line">     <span class="string">&quot;prettier --write&quot;</span>,</span><br><span class="line">     <span class="string">&quot;stylelint --fix&quot;</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">&quot;*.&#123;scss,css&#125;&quot;</span>: [</span><br><span class="line">     <span class="string">&quot;stylelint --fix&quot;</span>,</span><br><span class="line">     <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">&quot;*.md&quot;</span>: [</span><br><span class="line">     <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">   ]</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="运行指令"><a href="#运行指令" class="headerlink" title="运行指令"></a>运行指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint:lint-staged&quot;</span>: <span class="string">&quot;lint-staged&quot;</span>,</span><br></pre></td></tr></table></figure><h2 id="pre-commit-husky-配置"><a href="#pre-commit-husky-配置" class="headerlink" title="pre-commit:husky 配置"></a>pre-commit:husky 配置</h2><p>在 .husky\pre-commit 文件中配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line">. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span><br><span class="line"></span><br><span class="line">npm run lint:lint-staged</span><br></pre></td></tr></table></figure><h1 id="commit-msg-Husky-Commitlint-Commitizen-cz-git"><a href="#commit-msg-Husky-Commitlint-Commitizen-cz-git" class="headerlink" title="commit-msg: Husky + Commitlint + Commitizen + cz-git"></a>commit-msg: Husky + Commitlint + Commitizen + cz-git</h1><p>Commitlint 检查您的提交消息是否符合 Conventional commit format</p><h2 id="Commitlint-安装"><a href="#Commitlint-安装" class="headerlink" title="Commitlint 安装"></a>Commitlint 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D @commitlint/cli @commitlint/config-conventional</span><br></pre></td></tr></table></figure><h2 id="Commitlint-配置文件"><a href="#Commitlint-配置文件" class="headerlink" title="Commitlint 配置文件"></a>Commitlint 配置文件</h2><p><a href="commitlint.config.cjs">commitlint.config.cjs 文件下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // 继承的规则</span><br><span class="line">  extends: [&quot;@commitlint/config-conventional&quot;],</span><br><span class="line">  // @see: https://commitlint.js.org/#/reference-rules</span><br><span class="line">  rules: &#123;</span><br><span class="line">    &quot;subject-case&quot;: [0], // subject大小写不做校验</span><br><span class="line"></span><br><span class="line">    // 类型枚举，git提交type必须是以下类型</span><br><span class="line">    &quot;type-enum&quot;: [</span><br><span class="line">      2,</span><br><span class="line">      &quot;always&quot;,</span><br><span class="line">      [</span><br><span class="line">        &quot;feat&quot;, // 新增功能</span><br><span class="line">        &quot;fix&quot;, // 修复缺陷</span><br><span class="line">        &quot;docs&quot;, // 文档变更</span><br><span class="line">        &quot;style&quot;, // 代码格式（不影响功能，例如空格、分号等格式修正）</span><br><span class="line">        &quot;refactor&quot;, // 代码重构（不包括 bug 修复、功能新增）</span><br><span class="line">        &quot;perf&quot;, // 性能优化</span><br><span class="line">        &quot;test&quot;, // 添加疏漏测试或已有测试改动</span><br><span class="line">        &quot;build&quot;, // 构建流程、外部依赖变更（如升级 npm 包、修改 webpack 配置等）</span><br><span class="line">        &quot;ci&quot;, // 修改 CI 配置、脚本</span><br><span class="line">        &quot;revert&quot;, // 回滚 commit</span><br><span class="line">        &quot;chore&quot;, // 对构建过程或辅助工具和库的更改（不影响源文件、测试用例）</span><br><span class="line">      ],</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  prompt: &#123;</span><br><span class="line">    messages: &#123;</span><br><span class="line">      type: &quot;选择你要提交的类型 :&quot;,</span><br><span class="line">      scope: &quot;选择一个提交范围（可选）:&quot;,</span><br><span class="line">      customScope: &quot;请输入自定义的提交范围 :&quot;,</span><br><span class="line">      subject: &quot;填写简短精炼的变更描述 :\n&quot;,</span><br><span class="line">      body: &#x27;填写更加详细的变更描述（可选）。使用 &quot;|&quot; 换行 :\n&#x27;,</span><br><span class="line">      breaking: &#x27;列举非兼容性重大的变更（可选）。使用 &quot;|&quot; 换行 :\n&#x27;,</span><br><span class="line">      footerPrefixesSelect: &quot;选择关联issue前缀（可选）:&quot;,</span><br><span class="line">      customFooterPrefix: &quot;输入自定义issue前缀 :&quot;,</span><br><span class="line">      footer: &quot;列举关联issue (可选) 例如: #31, #I3244 :\n&quot;,</span><br><span class="line">      generatingByAI: &quot;正在通过 AI 生成你的提交简短描述...&quot;,</span><br><span class="line">      generatedSelectByAI: &quot;选择一个 AI 生成的简短描述:&quot;,</span><br><span class="line">      confirmCommit: &quot;是否提交或修改commit ?&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    // prettier-ignore</span><br><span class="line">    types: [</span><br><span class="line">&#123; value: &quot;feat&quot;,     name: &quot;特性:     ✨  新增功能&quot;, emoji: &quot;:sparkles:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;fix&quot;,      name: &quot;修复:     🐛  修复缺陷&quot;, emoji: &quot;:bug:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;docs&quot;,     name: &quot;文档:     📝  文档变更&quot;, emoji: &quot;:memo:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;style&quot;,    name: &quot;格式:     💄  代码格式（不影响功能，例如空格、分号等格式修正）&quot;, emoji: &quot;:lipstick:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;refactor&quot;, name: &quot;重构:     ♻️  代码重构（不包括 bug 修复、功能新增）&quot;, emoji: &quot;:recycle:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;perf&quot;,     name: &quot;性能:     ⚡️  性能优化&quot;, emoji: &quot;:zap:&quot; &#125;,</span><br><span class="line">&#123; value: &quot;test&quot;,     name: &quot;测试:     ✅  添加疏漏测试或已有测试改动&quot;, emoji: &quot;:white_check_mark:&quot;&#125;,</span><br><span class="line">&#123; value: &quot;build&quot;,    name: &quot;构建:     📦️  构建流程、外部依赖变更（如升级 npm 包、修改 vite 配置等）&quot;, emoji: &quot;:package:&quot;&#125;,</span><br><span class="line">&#123; value: &quot;ci&quot;,       name: &quot;集成:     🎡  修改 CI 配置、脚本&quot;,  emoji: &quot;:ferris_wheel:&quot;&#125;,</span><br><span class="line">&#123; value: &quot;revert&quot;,   name: &quot;回退:     ⏪️  回滚 commit&quot;,emoji: &quot;:rewind:&quot;&#125;,</span><br><span class="line">&#123; value: &quot;chore&quot;,    name: &quot;其他:     🔨  对构建过程或辅助工具和库的更改（不影响源文件、测试用例）&quot;, emoji: &quot;:hammer:&quot;&#125;,</span><br><span class="line">],</span><br><span class="line">    useEmoji: true,</span><br><span class="line">    emojiAlign: &quot;center&quot;,</span><br><span class="line">    useAI: false,</span><br><span class="line">    aiNumber: 1,</span><br><span class="line">    themeColorCode: &quot;&quot;,</span><br><span class="line">    scopes: [],</span><br><span class="line">    allowCustomScopes: true,</span><br><span class="line">    allowEmptyScopes: true,</span><br><span class="line">    customScopesAlign: &quot;bottom&quot;,</span><br><span class="line">    customScopesAlias: &quot;custom&quot;,</span><br><span class="line">    emptyScopesAlias: &quot;empty&quot;,</span><br><span class="line">    upperCaseSubject: false,</span><br><span class="line">    markBreakingChangeMode: false,</span><br><span class="line">    allowBreakingChanges: [&quot;feat&quot;, &quot;fix&quot;],</span><br><span class="line">    breaklineNumber: 100,</span><br><span class="line">    breaklineChar: &quot;|&quot;,</span><br><span class="line">    skipQuestions: [],</span><br><span class="line">    issuePrefixes: [</span><br><span class="line">      &#123; value: &quot;closed&quot;, name: &quot;closed:   ISSUES has been processed&quot; &#125;,</span><br><span class="line">    ],</span><br><span class="line">    customIssuePrefixAlign: &quot;top&quot;,</span><br><span class="line">    emptyIssuePrefixAlias: &quot;skip&quot;,</span><br><span class="line">    customIssuePrefixAlias: &quot;custom&quot;,</span><br><span class="line">    allowCustomIssuePrefix: true,</span><br><span class="line">    allowEmptyIssuePrefix: true,</span><br><span class="line">    confirmColorize: true,</span><br><span class="line">    maxHeaderLength: Infinity,</span><br><span class="line">    maxSubjectLength: Infinity,</span><br><span class="line">    minSubjectLength: 0,</span><br><span class="line">    scopeOverrides: undefined,</span><br><span class="line">    defaultBody: &quot;&quot;,</span><br><span class="line">    defaultIssues: &quot;&quot;,</span><br><span class="line">    defaultScope: &quot;&quot;,</span><br><span class="line">    defaultSubject: &quot;&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="husky-配置提交消息钩子"><a href="#husky-配置提交消息钩子" class="headerlink" title="husky 配置提交消息钩子"></a>husky 配置提交消息钩子</h2><h3 id="生成命令"><a href="#生成命令" class="headerlink" title="生成命令"></a>生成命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/commit-msg <span class="string">&quot;npx --no -- commitlint --edit <span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure><p>生成内容在<code>.husky\commit-msg</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env sh</span><br><span class="line">. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span><br><span class="line"></span><br><span class="line">npx --no -- commitlint --edit</span><br></pre></td></tr></table></figure><h2 id="Commitizen-amp-cz-git-配置"><a href="#Commitizen-amp-cz-git-配置" class="headerlink" title="Commitizen &amp; cz-git 配置"></a>Commitizen &amp; cz-git 配置</h2><p>Commitizen &amp; cz-git 配置在命令行提交 git 生成 message</p><h3 id="Commitizen-amp-cz-git-安装"><a href="#Commitizen-amp-cz-git-安装" class="headerlink" title="Commitizen &amp; cz-git 安装"></a>Commitizen &amp; cz-git 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D commitizen cz-git</span><br></pre></td></tr></table></figure><h3 id="cz-git-配置"><a href="#cz-git-配置" class="headerlink" title="cz-git 配置"></a>cz-git 配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;config&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;commitizen&quot;</span>: &#123;</span><br><span class="line">     <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;node_modules/cz-git&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="npm-指令"><a href="#npm-指令" class="headerlink" title="npm 指令"></a>npm 指令</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;commit&quot;</span>: <span class="string">&quot;git-cz&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
          <category> husky </category>
          
      </categories>
      
      
        <tags>
            
            <tag> husky </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eslint+Prettier+Stylelint使用</title>
      <link href="/2024/02/09/Eslint-Prettier-Stylelint%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/02/09/Eslint-Prettier-Stylelint%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D eslint</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="eslintrc-cjs"><a href="#eslintrc-cjs" class="headerlink" title=".eslintrc.cjs"></a>.eslintrc.cjs</h3><p><a href=".eslintrc.cjs">.eslintrc.cjs 文件下载</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-env node */</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;@rushstack/eslint-patch/modern-module-resolution&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">env</span>: &#123;</span><br><span class="line">    <span class="attr">node</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    <span class="string">&quot;plugin:vue/vue3-essential&quot;</span>,</span><br><span class="line">    <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@vue/eslint-config-typescript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@vue/eslint-config-prettier/skip-formatting&quot;</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">ecmaVersion</span>: <span class="string">&quot;latest&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;vue/multi-word-component-names&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vue/comment-directive&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="eslintignore"><a href="#eslintignore" class="headerlink" title=".eslintignore"></a>.eslintignore</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">node_modules</span><br><span class="line">public</span><br><span class="line">.husky</span><br><span class="line">.vscode</span><br><span class="line">.idea</span><br><span class="line">*.sh</span><br><span class="line">*.md</span><br><span class="line"></span><br><span class="line">src/assets</span><br><span class="line"></span><br><span class="line">.eslintrc.cjs</span><br><span class="line">.prettierrc.cjs</span><br><span class="line">.stylelintrc.cjs</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="npm-脚本命令"><a href="#npm-脚本命令" class="headerlink" title="npm 脚本命令"></a>npm 脚本命令</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint:eslint&quot;</span>: <span class="string">&quot;eslint \&quot;src/**/*.&#123;vue,ts,js&#125;\&quot; \&quot;index.html\&quot; --fix&quot;</span>,</span><br></pre></td></tr></table></figure><h1 id="prettier"><a href="#prettier" class="headerlink" title="prettier"></a>prettier</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="prettierrc-cjs"><a href="#prettierrc-cjs" class="headerlink" title=".prettierrc.cjs"></a>.prettierrc.cjs</h3><p><a href=".prettierrc.cjs">.prettierrc.cjs 文件下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // (x)=&gt;&#123;&#125;,单个参数箭头函数是否显示小括号。(always:始终显示;avoid:省略括号。默认:always)</span><br><span class="line">  arrowParens: &quot;always&quot;,</span><br><span class="line">  // 开始标签的右尖括号是否跟随在最后一行属性末尾，默认false</span><br><span class="line">  bracketSameLine: false,</span><br><span class="line">  // 对象字面量的括号之间打印空格 (true - Example: &#123; foo: bar &#125; ; false - Example: &#123;foo:bar&#125;)</span><br><span class="line">  bracketSpacing: true,</span><br><span class="line">  // 是否格式化一些文件中被嵌入的代码片段的风格(auto|off;默认auto)</span><br><span class="line">  embeddedLanguageFormatting: &quot;auto&quot;,</span><br><span class="line">  // 指定 HTML 文件的空格敏感度 (css|strict|ignore;默认css)</span><br><span class="line">  htmlWhitespaceSensitivity: &quot;css&quot;,</span><br><span class="line">  // 当文件已经被 Prettier 格式化之后，是否会在文件顶部插入一个特殊的 @format 标记，默认false</span><br><span class="line">  insertPragma: false,</span><br><span class="line">  // 在 JSX 中使用单引号替代双引号，默认false</span><br><span class="line">  jsxSingleQuote: false,</span><br><span class="line">  // 每行最多字符数量，超出换行(默认80)</span><br><span class="line">  printWidth: 120,</span><br><span class="line">  // 超出打印宽度 (always | never | preserve )</span><br><span class="line">  proseWrap: &quot;preserve&quot;,</span><br><span class="line">  // 对象属性是否使用引号(as-needed | consistent | preserve;默认as-needed:对象的属性需要加引号才添加;)</span><br><span class="line">  quoteProps: &quot;as-needed&quot;,</span><br><span class="line">  // 是否只格式化在文件顶部包含特定注释(@prettier| @format)的文件，默认false</span><br><span class="line">  requirePragma: false,</span><br><span class="line">  // 结尾添加分号</span><br><span class="line">  semi: true,</span><br><span class="line">  // 使用单引号 (true:单引号;false:双引号)</span><br><span class="line">  singleQuote: false,</span><br><span class="line">  // 缩进空格数，默认2个空格</span><br><span class="line">  tabWidth: 2,</span><br><span class="line">  // 元素末尾是否加逗号，默认es5: ES5中的 objects, arrays 等会添加逗号，TypeScript 中的 type 后不加逗号</span><br><span class="line">  trailingComma: &quot;es5&quot;,</span><br><span class="line">  // 指定缩进方式，空格或tab，默认false，即使用空格</span><br><span class="line">  useTabs: false,</span><br><span class="line">  // vue 文件中是否缩进 &lt;style&gt; 和 &lt;script&gt; 标签，默认 false</span><br><span class="line">  vueIndentScriptAndStyle: false,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="prettierignore"><a href="#prettierignore" class="headerlink" title=".prettierignore"></a>.prettierignore</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">node_modules</span><br><span class="line">public</span><br><span class="line">.husky</span><br><span class="line">.vscode</span><br><span class="line">.idea</span><br><span class="line">*.sh</span><br><span class="line">*.md</span><br><span class="line"></span><br><span class="line">src/assets</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="npm-格式化命令"><a href="#npm-格式化命令" class="headerlink" title="npm 格式化命令"></a>npm 格式化命令</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint:prettier&quot;</span>: <span class="string">&quot;prettier --write \&quot;**/*.&#123;js,ts,json,css,less,scss,vue,html,md&#125;\&quot;&quot;</span>,</span><br></pre></td></tr></table></figure><h1 id="stylelint"><a href="#stylelint" class="headerlink" title="stylelint"></a>stylelint</h1><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install -D stylelint stylelint-config-standard stylelint-config-recommended-scss stylelint-config-recommended-vue postcss postcss-html postcss-scss stylelint-config-recess-order stylelint-config-html</span><br></pre></td></tr></table></figure><h2 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="stylelintrc-cjs"><a href="#stylelintrc-cjs" class="headerlink" title=".stylelintrc.cjs"></a>.stylelintrc.cjs</h3><p><a href=".stylelintrc.cjs">.stylelintrc.cjs 文件下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // 继承推荐规范配置</span><br><span class="line">  extends: [</span><br><span class="line">    &quot;stylelint-config-standard&quot;,</span><br><span class="line">    &quot;stylelint-config-recommended-scss&quot;,</span><br><span class="line">    &quot;stylelint-config-recommended-vue/scss&quot;,</span><br><span class="line">    &quot;stylelint-config-html/vue&quot;,</span><br><span class="line">    &quot;stylelint-config-recess-order&quot;,</span><br><span class="line">  ],</span><br><span class="line">  // 指定不同文件对应的解析器</span><br><span class="line">  overrides: [</span><br><span class="line">    &#123;</span><br><span class="line">      files: [&quot;**/*.&#123;vue,html&#125;&quot;],</span><br><span class="line">      customSyntax: &quot;postcss-html&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      files: [&quot;**/*.&#123;css,scss&#125;&quot;],</span><br><span class="line">      customSyntax: &quot;postcss-scss&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  // 自定义规则</span><br><span class="line">  rules: &#123;</span><br><span class="line">    // 允许 global 、export 、v-deep等伪类</span><br><span class="line">    &quot;selector-pseudo-class-no-unknown&quot;: [</span><br><span class="line">      true,</span><br><span class="line">      &#123;</span><br><span class="line">        ignorePseudoClasses: [&quot;global&quot;, &quot;export&quot;, &quot;v-deep&quot;, &quot;deep&quot;],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    &quot;no-empty-source&quot;: null,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="stylelintignore"><a href="#stylelintignore" class="headerlink" title=".stylelintignore"></a>.stylelintignore</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">node_modules</span><br><span class="line">public</span><br><span class="line">.husky</span><br><span class="line">.vscode</span><br><span class="line">.idea</span><br><span class="line">*.sh</span><br><span class="line">*.md</span><br><span class="line"></span><br><span class="line">src/assets</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="npm-格式化命令-1"><a href="#npm-格式化命令-1" class="headerlink" title="npm 格式化命令"></a>npm 格式化命令</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint:stylelint&quot;</span>: <span class="string">&quot;stylelint  \&quot;**/*.&#123;css,scss,vue,html&#125;\&quot; --fix&quot;</span>,</span><br></pre></td></tr></table></figure><h1 id="EditorConfig-编辑器"><a href="#EditorConfig-编辑器" class="headerlink" title="EditorConfig 编辑器"></a>EditorConfig 编辑器</h1><p>EditorConfig 主要用于统一不同 IDE 编辑器的编码风格。</p><h2 id="配置文件-2"><a href="#配置文件-2" class="headerlink" title="配置文件"></a>配置文件</h2><p><a href=".editorconfig">.editorconfig 文件下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># http://editorconfig.org</span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line"># 表示所有文件适用</span><br><span class="line">[*]</span><br><span class="line">charset = utf-8 # 设置文件字符集为 utf-8</span><br><span class="line">end_of_line = lf # 控制换行类型(lf | cr | crlf)</span><br><span class="line">indent_style = tab # 缩进风格（tab | space）</span><br><span class="line">insert_final_newline = true # 始终在文件末尾插入一个新行</span><br><span class="line"></span><br><span class="line"># 表示仅 md 文件适用以下规则</span><br><span class="line">[*.md]</span><br><span class="line">max_line_length = off # 关闭最大行长度限制</span><br><span class="line">trim_trailing_whitespace = false # 关闭末尾空格修剪</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://blog.csdn.net/u013737132/article/details/130190788">【vue3-element-admin】ESLint+Prettier+Stylelint+EditorConfig 约束和统一前端代码规范</a></p>]]></content>
      
      
      <categories>
          
          <category> code_lint </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eslint </tag>
            
            <tag> prettier </tag>
            
            <tag> stylelint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java中excel操作</title>
      <link href="/2024/02/05/java%E4%B8%ADexcel%E6%93%8D%E4%BD%9C/"/>
      <url>/2024/02/05/java%E4%B8%ADexcel%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="EasyExcel"><a href="#EasyExcel" class="headerlink" title="EasyExcel"></a>EasyExcel</h1><blockquote><p>参考文档</p></blockquote><ul><li><a href="https://easyexcel.opensource.alibaba.com/docs/current/">官方文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/457848706">知乎使用文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElementPlus踩坑记录</title>
      <link href="/2024/01/29/ElementPlus%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/01/29/ElementPlus%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="form"><a href="#form" class="headerlink" title="form"></a>form</h2><h3 id="使用-resetFields-不能将所有字段重置"><a href="#使用-resetFields-不能将所有字段重置" class="headerlink" title="使用 resetFields() 不能将所有字段重置"></a>使用 resetFields() 不能将所有字段重置</h3><ol><li>首先这个方法是会将所有表单下出现过的 formItem 重置（就算是 v-if 消失的也会重置）</li><li>这个重置的初始值是个坑点，他是在你渲染 formItem 时候绑定的值为初始值，会出现下面的情况<ol><li>当你 v-if true,修改了他的值，双向绑定，这个表单的值也就改变了</li><li>当你 true-&gt;false-&gt;true 这时候会重新渲染 formItem 初始值也会重置成此刻的值（这个值是你更新后的值）</li></ol></li></ol><h3 id="在form表单中只有一个item-时，按enter-会自动submit"><a href="#在form表单中只有一个item-时，按enter-会自动submit" class="headerlink" title="在form表单中只有一个item 时，按enter 会自动submit"></a>在form表单中只有一个item 时，按enter 会自动submit</h3><ol><li>在form里面添加两个item,隐藏一个</li><li>在form上添加阻止原来的submit 事件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@submit.prevent</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置全局语言"><a href="#配置全局语言" class="headerlink" title="配置全局语言"></a>配置全局语言</h2><ol><li>导入语言的时候，官网那个会有 ts 报错，新版在 es/locale 包下面<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; zhCn, en &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus/es/locale/index&quot;</span>;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> elementPlus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3 </tag>
            
            <tag> webUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose 使用</title>
      <link href="/2024/01/28/docker-compose-%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/01/28/docker-compose-%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>yum 安装（版本很低）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-compose</span><br></pre></td></tr></table></figure></li><li>git 下载文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载文件</span></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line"><span class="comment"># 添加 /usr/local/bin 的全局环境变量</span></span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure></li></ol><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>配置文件包含三部分</p><ul><li>version</li><li>services</li><li>network</li></ul><h3 id="nginx-示例配置"><a href="#nginx-示例配置" class="headerlink" title="nginx 示例配置"></a>nginx 示例配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  web:</span><br><span class="line">    image: nginx</span><br><span class="line">    container_name: blog_nginx</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">      - ./wang_zhe343621:/usr/share/nginx/html</span><br><span class="line">      - ./nginx/logs:/var/<span class="built_in">log</span>/nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ol><li>启动<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定配置文件开启，-d后台启动</span></span><br><span class="line">docker-compose -f [conf.file] up -d</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 内核升级</title>
      <link href="/2024/01/27/Linux-%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/"/>
      <url>/2024/01/27/Linux-%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>这一知识来源于开启 bbr3 <br><br><a href="http://elrepo.org/tiki/HomePage">内核更新官网</a></p><p><a href="https://youtu.be/rliQg3Z4i_8?si=c8BPAt7l54KQ6xop">bbr3 开启视频地址</a></p><p><a href="https://drive.google.com/file/d/1kt_AKvCi5X3uNlH3LVOXkGbXitz4KOOM/view">bbr3 原文档地址</a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>更新系统和软件包：<br>yum update</li><li>查看系统版本：<br>[root@amber ~]# cat /etc/redhat-release</li><li>安装 elrepo 并升级内核：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">   yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span><br><span class="line">   安装 kernel-ml 内核</span><br><span class="line">   yum --enablerepo=elrepo-kernel install kernel-m</span><br><span class="line">   ````</span><br><span class="line"></span><br><span class="line">4. 更新 grub 文件并重启系统：</span><br><span class="line">   ```bash</span><br><span class="line">   <span class="comment">#查看内核版本</span></span><br><span class="line">   uname -r</span><br><span class="line">   <span class="comment">#查看系统中所有可引导的内核版本：</span></span><br><span class="line">   egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   #设置我们 linux 系统启动后，加载并引导第一个内核</span></span><br><span class="line"><span class="string">   grub2-set-default 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   reboot</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li>重新查看内核版本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure></li></ol><h1 id="开启-bbr"><a href="#开启-bbr" class="headerlink" title="开启 bbr"></a>开启 bbr</h1><ol><li>设置系统配置文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 在文件末尾添加如下内容</span></span><br><span class="line">net.core.default_qdisc = fq</span><br><span class="line">net.ipv4.tcp_congestion_control = bb</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>加载系统参数<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li><li>确定 bbr 已经成功开启： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control = reno cubic bbr</span><br><span class="line">[root@amber ~]<span class="comment"># lsmod | grep bbr</span></span><br><span class="line">tcp_bbr                20480  1</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端知识列表</title>
      <link href="/2023/10/10/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%88%97%E8%A1%A8/"/>
      <url>/2023/10/10/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="前端知识列表"><a href="#前端知识列表" class="headerlink" title="前端知识列表"></a>前端知识列表</h1><p><a href="https://blog.csdn.net/u014061630/article/details/81359144?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169686741416800197027685%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169686741416800197027685&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-81359144-null-null.142%5Ev95%5Econtrol&amp;utm_term=markdown%E8%AF%AD%E6%B3%95&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/u014061630/article/details/81359144?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169686741416800197027685%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169686741416800197027685&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-81359144-null-null.142^v95^control&amp;utm_term=markdown%E8%AF%AD%E6%B3%95&amp;spm=1018.2226.3001.4187</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><table><thead><tr><th align="center">名称</th><th align="center">介绍</th></tr></thead><tbody><tr><td align="center">nvm</td><td align="center">管理多个版本的node</td></tr><tr><td align="center">animate.css</td><td align="center">css动画库</td></tr><tr><td align="center">greensock</td><td align="center">js 动画库</td></tr></tbody></table><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2>]]></content>
      
      
      <categories>
          
          <category> 1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode加载web视图，图片报错</title>
      <link href="/2023/04/04/vscode%E5%8A%A0%E8%BD%BDweb%E8%A7%86%E5%9B%BE%EF%BC%8C%E5%9B%BE%E7%89%87%E6%8A%A5%E9%94%99/"/>
      <url>/2023/04/04/vscode%E5%8A%A0%E8%BD%BDweb%E8%A7%86%E5%9B%BE%EF%BC%8C%E5%9B%BE%E7%89%87%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="vscode加载web-视图，报错-“Error-Could-not-register-serviceworkers-InvalidstateError-Failed-to-regist“"><a href="#vscode加载web-视图，报错-“Error-Could-not-register-serviceworkers-InvalidstateError-Failed-to-regist“" class="headerlink" title="vscode加载web 视图，报错:“Error: Could not register serviceworkers: InvalidstateError: Failed to regist“"></a>vscode加载web 视图，报错:“Error: Could not register serviceworkers: InvalidstateError: Failed to regist“</h1><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><ol><li>关闭vscode</li><li><code>win+r</code> 打开cmd<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code --no-sandbox</span><br></pre></td></tr></table></figure>会重启vscode，就可以查看了</li></ol><h2 id="引用文献"><a href="#引用文献" class="headerlink" title="引用文献"></a>引用文献</h2><p>[1] <a href="https://blog.csdn.net/m0_58724783/article/details/127879777?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-127879777-blog-125405459.235%5Ev27%5Epc_relevant_multi_platform_whitelistv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-127879777-blog-125405459.235%5Ev27%5Epc_relevant_multi_platform_whitelistv3&utm_relevant_index=5">vscode加载web 视图</a></p>]]></content>
      
      
      <categories>
          
          <category> problem </category>
          
          <category> software </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> problem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7 安装runlike(docker查看容器启动命令)</title>
      <link href="/2023/04/02/centos7-%E5%AE%89%E8%A3%85runlike-docker%E6%9F%A5%E7%9C%8B%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/04/02/centos7-%E5%AE%89%E8%A3%85runlike-docker%E6%9F%A5%E7%9C%8B%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="centos7-安装runlike"><a href="#centos7-安装runlike" class="headerlink" title="centos7 安装runlike"></a>centos7 安装runlike</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>centos7 | python2.7 | Docker version 20.10.17</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li>yum -y install epel-release</li><li>yum install -y python-pip</li><li>pip install runlike 这一步报错:<br><img src="/.io//pip-install-upgrade%E5%91%BD%E4%BB%A4.png" alt="pip install runlike报错"><br>根据提示运行命令 pip install –upgrade pip  无效，还是报错</li></ol><p><strong><font size="4">解决方法</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/pip/2.7/get-pip.py</span><br><span class="line">python get-pip.py</span><br><span class="line">pip install runlike</span><br></pre></td></tr></table></figure><h2 id="引用文献"><a href="#引用文献" class="headerlink" title="引用文献"></a>引用文献</h2><p>[1] <a href="https://www.dianjilingqu.com/177835.html">Centos7-安装runlike用来查看docker容器启动时候的参数</a></p>]]></content>
      
      
      <categories>
          
          <category> install </category>
          
          <category> centos </category>
          
          <category> install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7 </tag>
            
            <tag> runlike </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 常用命令使用记录</title>
      <link href="/2023/04/02/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/04/02/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><ol><li><p>修改docker启动配置命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改nginx跟随系统重启</span></span><br><span class="line">docker update --restart=always nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">docker container update --restart=always nginx</span><br></pre></td></tr></table></figure></li><li><p>修改容器名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rename [old(id or name)] [new name]</span><br></pre></td></tr></table></figure></li><li><p>进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it [docker id or name] /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>退出容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment"># exit 退出 如果容器没有-d 后台运行，会直接关闭容器</span></span><br><span class="line"><span class="comment">#or</span></span><br><span class="line">ctrl + p + q <span class="comment"># 退出容器(-d 不影响)</span></span><br></pre></td></tr></table></figure></li><li><p>查看容器详情(不能重现启动命令)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect [docker id or name]</span><br></pre></td></tr></table></figure></li><li><p>查看容器的启动命令(runlike)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 python -&gt; pip -&gt; runlike</span></span><br><span class="line">runlike -p [docker id or name]</span><br><span class="line">...待写</span><br></pre></td></tr></table></figure><p><img src="/.io//docker-runlike-example.png" alt="runlike-example-result"></p></li><li><p>修改容器映射端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#temp </span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="引用文献"><a href="#引用文献" class="headerlink" title="引用文献"></a>引用文献</h2><p>[1] <a href="https://liucy.blog.csdn.net/article/details/124511738?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-124511738-blog-122253638.235%5Ev27%5Epc_relevant_default_base1&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-124511738-blog-122253638.235%5Ev27%5Epc_relevant_default_base1&utm_relevant_index=1">docker修改容器的端口、容器名、映射地址</a></p>]]></content>
      
      
      <categories>
          
          <category> command </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-nginx安装</title>
      <link href="/2023/04/02/docker-nginx%E5%AE%89%E8%A3%85/"/>
      <url>/2023/04/02/docker-nginx%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="docker下安装nginx"><a href="#docker下安装nginx" class="headerlink" title="docker下安装nginx"></a>docker下安装nginx</h1><ol><li>下载镜像<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure></li><li>创建挂载卷<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/nginx/conf</span><br><span class="line">mkdir -p /data/nginx/<span class="built_in">log</span></span><br><span class="line">mkdir -p /data/nginx/html</span><br></pre></td></tr></table></figure></li><li>启动临时nginx容器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name nginx-temp -p 80:80 -d nginx</span><br><span class="line"><span class="comment">#停止删除</span></span><br><span class="line">docker stop nginx-temp</span><br><span class="line">docker rm nginx-temp</span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li><li>复制docker容器中的配置文件到宿主机上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp nginx-temp:/etc/nginx/nginx.conf /data/nginx/conf/nginx.conf</span><br><span class="line">docker cp nginx-temp:/etc/nginx/conf.d /data/nginx/conf/conf.d</span><br><span class="line">docker cp nginx-temp:/usr/share/nginx/html /data/nginx/</span><br></pre></td></tr></table></figure></li><li>启动nginx容器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 80:80 \</span><br><span class="line">--name nginx \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v /data/nginx/conf/conf.d:/etc/nginx/conf.d \</span><br><span class="line">-v /data/nginx/<span class="built_in">log</span>:/var/<span class="built_in">log</span>/nginx \</span><br><span class="line">-v /data/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-d nginx:latest</span><br></pre></td></tr></table></figure></li><li>修改容器启动配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置nginx自动启动</span></span><br><span class="line">docker update --restart=always nginx </span><br></pre></td></tr></table></figure></li><li>查看nginx 启动命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runlike -p nginx</span><br></pre></td></tr></table></figure></li></ol><h1 id="引用文献"><a href="#引用文献" class="headerlink" title="引用文献"></a>引用文献</h1><p>[1] <a href="https://www.dianjilingqu.com/177835.html">Centos7-安装runlike用来查看docker容器启动时候的参数</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> nginx </tag>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端返参Long型-JS显示精度不准确</title>
      <link href="/2023/01/16/%E5%90%8E%E7%AB%AF%E8%BF%94%E5%8F%82Long%E5%9E%8B-JS%E6%98%BE%E7%A4%BA%E7%B2%BE%E5%BA%A6%E4%B8%8D%E5%87%86%E7%A1%AE/"/>
      <url>/2023/01/16/%E5%90%8E%E7%AB%AF%E8%BF%94%E5%8F%82Long%E5%9E%8B-JS%E6%98%BE%E7%A4%BA%E7%B2%BE%E5%BA%A6%E4%B8%8D%E5%87%86%E7%A1%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="后端返参Long型-JS显示精度不准确"><a href="#后端返参Long型-JS显示精度不准确" class="headerlink" title="后端返参Long型-JS显示精度不准确"></a>后端返参Long型-JS显示精度不准确</h1><blockquote><p>方法一</p></blockquote><p>后端返参转为String类型</p><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 后端 </tag>
            
            <tag> 精度不准确 </tag>
            
            <tag> Long </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>itextpdf生成pdf使用记录</title>
      <link href="/2022/12/16/itextpdf%E7%94%9F%E6%88%90pdf%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/16/itextpdf%E7%94%9F%E6%88%90pdf%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>BaseFont</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BaseFont baseChineseFont = BaseFont.createFont(<span class="string">&quot;STSong-Light&quot;</span>, <span class="string">&quot;UniGB-UCS2-H&quot;</span>, BaseFont.EMBEDDED);</span><br><span class="line"><span class="comment">//pdf字体名称，字体编码，pdf文本是否内嵌</span></span><br></pre></td></tr></table></figure><blockquote><p>Font</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">titlefont = <span class="keyword">new</span> Font(bfChinese, <span class="number">16</span>, Font.BOLD);</span><br><span class="line">headfont = <span class="keyword">new</span> Font(bfChinese, <span class="number">14</span>, Font.BOLD);</span><br><span class="line">keyfont = <span class="keyword">new</span> Font(bfChinese, <span class="number">10</span>, Font.BOLD);</span><br><span class="line">textfont = <span class="keyword">new</span> Font(bfChinese, <span class="number">10</span>, Font.NORMAL);</span><br><span class="line">Font font = <span class="keyword">new</span> Font(baseChineseFont, <span class="number">12</span>, Font.NORMAL,BaseColor.BLACK); <span class="comment">//basefont,font-size,font-style,font-color</span></span><br></pre></td></tr></table></figure><blockquote><p>Paragraph 段落</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//段落</span></span><br><span class="line">Paragraph paragraph = <span class="keyword">new</span> Paragraph(“”, titlefont); <span class="comment">//content,font</span></span><br><span class="line">paragraph.setAlignment(<span class="number">1</span>); <span class="comment">//设置文本对齐方式居中 0靠左 1，居中 2，靠右；正常靠左</span></span><br><span class="line">paragraph.setIndentationLeft(<span class="number">12</span>); <span class="comment">//设置左缩进</span></span><br><span class="line">paragraph.setIndentationRight(<span class="number">12</span>); <span class="comment">//设置右缩进</span></span><br><span class="line">paragraph.setFirstLineIndent(<span class="number">24</span>); <span class="comment">//设置首行缩进 24 是2个中文字符</span></span><br><span class="line">paragraph.setLeading(<span class="number">20f</span>); <span class="comment">//行间距</span></span><br><span class="line">paragraph.setSpacingBefore(<span class="number">5f</span>); <span class="comment">//设置段落上空白</span></span><br><span class="line">paragraph.setSpacingAfter(<span class="number">10f</span>); <span class="comment">//设置段落下空白</span></span><br><span class="line"><span class="comment">// 直线</span></span><br><span class="line">Paragraph p1 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">p1.add(<span class="keyword">new</span> Chunk(<span class="keyword">new</span> LineSeparator()));</span><br><span class="line">————————————————</span><br><span class="line"><span class="comment">// 点线</span></span><br><span class="line">Paragraph p2 = <span class="keyword">new</span> Paragraph();</span><br><span class="line">p2.add(<span class="keyword">new</span> Chunk(<span class="keyword">new</span> DottedLineSeparator()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 超链接</span></span><br><span class="line">Anchor anchor = <span class="keyword">new</span> Anchor(<span class="string">&quot;baidu&quot;</span>);</span><br><span class="line">anchor.setReference(<span class="string">&quot;www.baidu.com&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定位</span></span><br><span class="line">Anchor gotoP = <span class="keyword">new</span> Anchor(<span class="string">&quot;goto&quot;</span>);</span><br><span class="line">gotoP.setReference(<span class="string">&quot;#top&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> itextpdf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> itextpdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite使用记录</title>
      <link href="/2022/12/06/vite%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/06/vite%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="多环境配置文件"><a href="#多环境配置文件" class="headerlink" title="多环境配置文件"></a>多环境配置文件</h1><p><a href="https://www.jianshu.com/p/1e85185796d8">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> vite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swagger 使用记录</title>
      <link href="/2022/12/05/swagger-%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/05/swagger-%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>@ApiImplicitParam</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多文件上传</span></span><br><span class="line"><span class="meta">@ApiImplicitParam(name = &quot;files&quot;, value = &quot;多个文件&quot; , paramType = &quot;formData&quot;,allowMultiple=true,required = true,dataType = &quot;file&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通参数</span></span><br><span class="line"><span class="meta">@ApiImplicitParam(name = &quot;bucketName&quot;, value = &quot;存储桶&quot;,dataTypeClass = String.class, required = true ,allowMultiple=true)</span></span><br></pre></td></tr></table></figure><ul><li>paramType<ul><li>formData 表单</li><li>query </li><li>body 请求体</li></ul></li><li>dataType 数据类型 文件 是file</li><li>allowMultiple 多选，是List,ArrayList</li></ul><p><img src="/.io//image-20221205140144242.png" alt="image-20221205140144242"></p>]]></content>
      
      
      <categories>
          
          <category> swagger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swagger </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 命令及软件安装</title>
      <link href="/2022/12/02/docker-%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
      <url>/2022/12/02/docker-%E5%91%BD%E4%BB%A4%E5%8F%8A%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-命令"><a href="#docker-命令" class="headerlink" title="docker 命令"></a>docker 命令</h1><blockquote><p>查看docker容器日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f 容器id</span><br><span class="line">docker logs -f minio</span><br></pre></td></tr></table></figure><h1 id="docker-安装软件"><a href="#docker-安装软件" class="headerlink" title="docker 安装软件"></a>docker 安装软件</h1><h2 id="minio"><a href="#minio" class="headerlink" title="minio"></a>minio</h2><blockquote><p>命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart always -p 9000:9000 -p 9001:9001 --name minio -v /data/minio/data:/data -v /data/minio/config:/root/.minio -e <span class="string">&quot;MINIO_ROOT_USER=admin&quot;</span> -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minioadmin&quot;</span> minio/minio server /data --console-address <span class="string">&quot;:9000&quot;</span> --address <span class="string">&quot;:9001&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>ak&amp;sk</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">minioadmin</span><br></pre></td></tr></table></figure><blockquote><p>成功日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@racknerd-9c2e31 minio]<span class="comment"># docker logs -f minio</span></span><br><span class="line">WARNING: MINIO_ACCESS_KEY and MINIO_SECRET_KEY are deprecated.</span><br><span class="line">         Please use MINIO_ROOT_USER and MINIO_ROOT_PASSWORD</span><br><span class="line">Formatting 1st pool, 1 <span class="built_in">set</span>(s), 1 drives per <span class="built_in">set</span>.</span><br><span class="line">WARNING: Host <span class="built_in">local</span> has more than 0 drives of <span class="built_in">set</span>. A host failure will result <span class="keyword">in</span> data becoming unavailable.</span><br><span class="line">Warning: Default parity <span class="built_in">set</span> to 0. This can lead to data loss.</span><br><span class="line">MinIO Object Storage Server</span><br><span class="line">Copyright: 2015-2022 MinIO, Inc.</span><br><span class="line">License: GNU AGPLv3 &lt;https://www.gnu.org/licenses/agpl-3.0.html&gt;</span><br><span class="line">Version: RELEASE.2022-11-29T23-40-49Z (go1.19.3 linux/amd64)</span><br><span class="line"></span><br><span class="line">Status:         1 Online, 0 Offline. </span><br><span class="line">API: http://172.17.0.6:9001  http://127.0.0.1:9001 </span><br><span class="line">Console: http://172.17.0.6:9000 http://127.0.0.1:9000 </span><br><span class="line"></span><br><span class="line">Documentation: https://min.io/docs/minio/linux/index.html</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle 命令记录</title>
      <link href="/2022/11/24/Oracle-%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/11/24/Oracle-%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>查询所有用户</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> dba_users;</span><br></pre></td></tr></table></figure><blockquote><p>创建用户</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER blog IDENTIFIED BY blog;</span><br></pre></td></tr></table></figure><blockquote><p>用户赋权</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT CREATE SESSION TO blog;</span><br><span class="line">GRANT connect,resource TO blog;</span><br></pre></td></tr></table></figure><blockquote><p>查看用户权限</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM user_sys_privs;//查看当前用户所有权限</span><br><span class="line"></span><br><span class="line">SELECT * FROM user_tab_privs;//查看所用用户对表的权限</span><br></pre></td></tr></table></figure><blockquote><p>修改用户密码</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER system IDENTIFIED BY system;</span><br><span class="line"></span><br><span class="line">ALTER USER sys IDENTIFIED BY sys;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PL/SQL 15注册码</title>
      <link href="/2022/08/17/PL-SQL-15%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
      <url>/2022/08/17/PL-SQL-15%E6%B3%A8%E5%86%8C%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-8-17-验证可用"><a href="#2022-8-17-验证可用" class="headerlink" title="2022/8/17 验证可用"></a>2022/8/17 验证可用</h1><p>进入帮助 -&gt; 注册，<br>输入：<br>产品编号：kfsvzt6zh2exaxzxgjk44rv5kp2yp68vgk<br>序列号：186220<br>口令：xs374ca</p><p>直接获得9999-12-31，美滋滋</p><p><a href="https://blog.csdn.net/weixin_42966484/article/details/112767709?spm=1001.2014.3001.5506">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PLSQL </tag>
            
            <tag> 注册码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLSQL安装并且连接远程库</title>
      <link href="/2022/08/16/PLSQL%E5%AE%89%E8%A3%85%E5%B9%B6%E4%B8%94%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E5%BA%93/"/>
      <url>/2022/08/16/PLSQL%E5%AE%89%E8%A3%85%E5%B9%B6%E4%B8%94%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="PLSQL-DEVELOPER15-下载安装"><a href="#PLSQL-DEVELOPER15-下载安装" class="headerlink" title="PLSQL_DEVELOPER15 下载安装"></a>PLSQL_DEVELOPER15 下载安装</h1><p><a href="https://www.oracle.com/database/technologies/instant-client/winx64-64-downloads.html">下载链接</a></p><p><img src="/.io//image-20220816124115252.png" alt="image-20220816124115252"></p><p>需要安装图中的环境</p><h1 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h1><p><img src="/.io//image-20220816124920979.png" alt="image-20220816124920979"></p>]]></content>
      
      
      <categories>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PLSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StreamApi</title>
      <link href="/2022/05/27/StreamApi/"/>
      <url>/2022/05/27/StreamApi/</url>
      
        <content type="html"><![CDATA[<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="map-flatMap"><a href="#map-flatMap" class="headerlink" title="map/flatMap"></a>map/flatMap</h2><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>map，它的作用就是把inputStream的每个元素映射成outputStream的另外一个元素</p><p>map生成的是个1:1映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; nums = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">List&lt;Integer&gt; squareNums = nums.stream().map(n -&gt; n * n).collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h3><p>flatMap把inputStream中的层级结构 扁平化，就是将最底层元素抽出来放到一起，最终output的新Stream里面已经没有List了，都是直接的数字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;List&lt;Integer&gt;&gt; inputStream = Stream.of(</span><br><span class="line"> Arrays.asList(<span class="number">1</span>),</span><br><span class="line"> Arrays.asList(<span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line"> Arrays.asList(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line"> );</span><br><span class="line">Stream&lt;Integer&gt; outputStream = inputStream.</span><br><span class="line">flatMap((childList) -&gt; childList.stream());</span><br></pre></td></tr></table></figure><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>filter对原始Stream进行某项测试，通过测试的元素被留下来生成一个新Stream。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 留下偶数</span></span><br><span class="line">Integer[] sixNums = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">Integer[] evens =</span><br><span class="line">Stream.of(sixNums).filter(n -&gt; n%<span class="number">2</span> == <span class="number">0</span>).toArray(Integer[]::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><p>循环，terminal操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umsAdmins.stream().filter(n -&gt; n.getStatus() == <span class="number">1</span>).forEach(n -&gt; System.out.println(n.getUsername()));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>forEach是terminal操作。因此，它执行后，Stream 的元素就被“消费”掉了，你无法对一个Stream进行两次terminal运算。下面的代码是错误的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stream.forEach(element -&gt; doOneThing(element));</span><br><span class="line">stream.forEach(element -&gt; doAnotherThing(element));</span><br></pre></td></tr></table></figure><h2 id="findFirst"><a href="#findFirst" class="headerlink" title="findFirst"></a>findFirst</h2><p>这是一个termimal兼short-circuiting操作，它总是返回Stream的第一个元素或者空。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;UmsAdmin&gt; stream = umsAdmins.stream();</span><br><span class="line">Optional&lt;UmsAdmin&gt; first = stream.findFirst();</span><br><span class="line">UmsAdmin umsAdmin3 = first.get();</span><br><span class="line">System.out.println(umsAdmin3);</span><br><span class="line">String integer = Optional.ofNullable(umsAdmin3.getPassword()).map(n -&gt; n).orElse(String.valueOf(-<span class="number">1</span>));</span><br><span class="line">System.out.println(integer);</span><br></pre></td></tr></table></figure><p>findFirst 返回的是Optional</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><a href="https://blog.csdn.net/justloveyou_/article/details/79562574">StreamApi 的背景及使用</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 8 </category>
          
          <category> StreamApi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java8新特性 </tag>
            
            <tag> StreamApi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合Swagger</title>
      <link href="/2022/05/18/SpringBoot%E6%95%B4%E5%90%88Swagger/"/>
      <url>/2022/05/18/SpringBoot%E6%95%B4%E5%90%88Swagger/</url>
      
        <content type="html"><![CDATA[<h1 id="swagger-简介"><a href="#swagger-简介" class="headerlink" title="swagger 简介"></a>swagger 简介</h1><h1 id="整合swagger"><a href="#整合swagger" class="headerlink" title="整合swagger"></a>整合swagger</h1><h2 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h2><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><h1 id="2-6-x-以上-整合出现的问题"><a href="#2-6-x-以上-整合出现的问题" class="headerlink" title="2.6.x 以上 整合出现的问题"></a>2.6.x 以上 整合出现的问题</h1><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献:"></a>参考文献:</h1><p><a href="https://blog.csdn.net/qq_40205116/article/details/105200104?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165284373416781483781926%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165284373416781483781926&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105200104-null-null.142%5Ev10%5Econtrol,157%5Ev4%5Econtrol&utm_term=swagger2&spm=1018.2226.3001.4187">swagger2整合</a></p><p><a href="https://blog.csdn.net/weixin_43740223/article/details/108491386?spm=1001.2014.3001.5506">swagger3整合</a></p><p><a href="https://xingyun.blog.csdn.net/article/details/123753888?spm=1001.2014.3001.5506">springboot2.6x 兼容问题</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
          <category> Swagger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot项目改端口,一直显示端口被占用</title>
      <link href="/2022/05/13/springboot%E9%A1%B9%E7%9B%AE%E6%94%B9%E7%AB%AF%E5%8F%A3-%E4%B8%80%E7%9B%B4%E6%98%BE%E7%A4%BA%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
      <url>/2022/05/13/springboot%E9%A1%B9%E7%9B%AE%E6%94%B9%E7%AB%AF%E5%8F%A3-%E4%B8%80%E7%9B%B4%E6%98%BE%E7%A4%BA%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>springboot项目，无论修改什么端口，都显示端口被占用。</p><blockquote><p>错误原因</p></blockquote><p>java程序假死，需要在控制台需清理进程</p><p> <img src="/.io//image-20220513103147763.png" alt="image-20220513103147763"></p><p><strong><a href="https://blog.csdn.net/YangHongcxy/article/details/120783257?spm=1001.2014.3001.5506">原文链接</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 采坑 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 错误 </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus使用记录</title>
      <link href="/2022/04/15/mybatis-plus%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/04/15/mybatis-plus%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot-整合mybatis-plus"><a href="#springboot-整合mybatis-plus" class="headerlink" title="springboot 整合mybatis-plus"></a>springboot 整合mybatis-plus</h1><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>application.yaml配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">auto-mapping-behavior:</span> <span class="string">full</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:mapper/**/*Mapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="comment"># 逻辑删除配置</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 删除前</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="comment"># 删除后</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> mybatis-plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity使用记录</title>
      <link href="/2022/04/14/SpringSecurity%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/04/14/SpringSecurity%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h1><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>spring-security会自动添加一个登陆页面</strong></p><ul><li>用户 user</li><li>密码 会在控制台打印</li></ul><h1 id="springSecurity基本原理"><a href="#springSecurity基本原理" class="headerlink" title="springSecurity基本原理"></a>springSecurity基本原理</h1><p><strong>spring-security本质上是过滤器链</strong></p><p><strong>FilterSecurityInterceptor 是一个方法级的过滤器</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//过滤器体</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.invoke(<span class="keyword">new</span> FilterInvocation(request, response, chain));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//过滤器的执行体</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invoke</span><span class="params">(FilterInvocation filterInvocation)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.isApplied(filterInvocation) &amp;&amp; <span class="keyword">this</span>.observeOncePerRequest) &#123;</span><br><span class="line">        filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (filterInvocation.getRequest() != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.observeOncePerRequest) &#123;</span><br><span class="line">            filterInvocation.getRequest().setAttribute(<span class="string">&quot;__spring_security_filterSecurityInterceptor_filterApplied&quot;</span>, Boolean.TRUE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断之前过滤器的结果</span></span><br><span class="line">        InterceptorStatusToken token = <span class="keyword">super</span>.beforeInvocation(filterInvocation);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//执行当前过滤器</span></span><br><span class="line">            filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">super</span>.finallyInvocation(token);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//执行下一个过滤器</span></span><br><span class="line">        <span class="keyword">super</span>.afterInvocation(token, (Object)<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ExceptionTranslationFilter异常转换过滤器</strong></p><p>处理权限认证过程种抛出的异常</p><p><strong>UsernamePasswordAuthenticationFilter 判断用户post请求种的用户名和密码</strong></p><p><img src="/.io//image-20220414120714351.png" alt="image-20220414120714351"></p><h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><h2 id="不使用springboot配置security"><a href="#不使用springboot配置security" class="headerlink" title="不使用springboot配置security"></a>不使用springboot配置security</h2><p><strong>DelegatingFilterProxy</strong></p><h2 id="自定义用户名和密码匹配获取权限"><a href="#自定义用户名和密码匹配获取权限" class="headerlink" title="自定义用户名和密码匹配获取权限"></a>自定义用户名和密码匹配获取权限</h2><p><strong>获取用户数据</strong></p><ol><li><p>在配置文件中配置用户名和密码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">admin</span></span><br></pre></td></tr></table></figure></li><li><p>通过配置类设置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承 WebSecurityConfigurerAdapter</span></span><br><span class="line"><span class="comment">// 设置的密码必须加密，使用passwordEncoder相同的加密器</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">        String encode = passwordEncoder.encode(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        auth.inMemoryAuthentication().withUser(<span class="string">&quot;wangzhe&quot;</span>)</span><br><span class="line">                .password(encode)</span><br><span class="line">                        .roles(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须设置加密器</span></span><br><span class="line">    <span class="comment">//exception：id null...</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>配置类设置的密码必须加密，必须设置passwordEncoder</strong></p><ol start="3"><li><p>通过数据库查找来获取用户名和密码，需要实现UserDetailService 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MyUserDetailService myUserDetailService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(myUserDetailService)</span><br><span class="line">                .passwordEncoder(passwordEncoder());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserDetailService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        List&lt;GrantedAuthority&gt; authorities = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;roles&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="string">&quot;xiaomi&quot;</span>, <span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>),authorities);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="自定义登录页面"><a href="#自定义登录页面" class="headerlink" title="自定义登录页面"></a>自定义登录页面</h2><pre><code>  登录页面必须以post请求，表单的name必须设置为username,password。  必须设置登录页面放行策略  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.formLogin()</span><br><span class="line">                .loginPage(<span class="string">&quot;/login.html&quot;</span>) <span class="comment">// 登录页面</span></span><br><span class="line">                        .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>) <span class="comment">//表单登录按钮路径</span></span><br><span class="line">                                .defaultSuccessUrl(<span class="string">&quot;/test/index&quot;</span>) <span class="comment">//登录成功的默认跳转路径</span></span><br><span class="line">                                        .and().authorizeHttpRequests()</span><br><span class="line">                        .antMatchers(<span class="string">&quot;/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/login.html&quot;</span>).permitAll() <span class="comment">//放行路径,需要添加登录页面到放行路径中</span></span><br><span class="line">                        .anyRequest().authenticated()</span><br><span class="line">                        .and().csrf().disable();<span class="comment">//关闭csrf 防护</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre><h2 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h2><pre><code>  &gt; 单权限  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       http.formLogin()</span><br><span class="line">               .loginPage(<span class="string">&quot;/login.html&quot;</span>) <span class="comment">// 登录页面</span></span><br><span class="line">                       .loginProcessingUrl(<span class="string">&quot;/user/login&quot;</span>) <span class="comment">//表单登录按钮路径</span></span><br><span class="line">                               .defaultSuccessUrl(<span class="string">&quot;/test/index&quot;</span>) <span class="comment">//登录成功的默认跳转路径</span></span><br><span class="line">                                       .and().authorizeHttpRequests()</span><br><span class="line">                       .antMatchers(<span class="string">&quot;/hello&quot;</span>,<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/login.html&quot;</span>).permitAll() <span class="comment">//放行路径,需要添加登录页面到放行路径中</span></span><br><span class="line">                       .antMatchers(<span class="string">&quot;/test/authority&quot;</span>).hasAuthority(<span class="string">&quot;admin&quot;</span>) <span class="comment">//添加权限校验</span></span><br><span class="line">                       .antMatchers(<span class="string">&quot;/test/authorities&quot;</span>).hasAnyAuthority(<span class="string">&quot;admin,girl&quot;</span>)</span><br><span class="line">                       .anyRequest().authenticated()</span><br><span class="line">                       .and().csrf().disable();<span class="comment">//关闭csrf 防护</span></span><br><span class="line">   &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure></code></pre><p>​      </p><pre><code>  &gt; 多权限  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/test/authorities&quot;</span>).hasAnyAuthority(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;girl&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p>​      </p><pre><code>  **权限不足**  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Whitelabel Error Page</span><br><span class="line">This application has no explicit mapping for /error, so you are seeing this as a fallback.</span><br><span class="line"></span><br><span class="line">Fri Apr 15 16:07:39 CST 2022</span><br><span class="line">There was an unexpected error (type=Forbidden, status=403).</span><br><span class="line">Forbidden</span><br></pre></td></tr></table></figure></code></pre><p>​      </p><h2 id="用户角色分配"><a href="#用户角色分配" class="headerlink" title="用户角色分配"></a>用户角色分配</h2><pre><code>  &gt; 分配权限是 字符串需要在前面拼接 `ROLE_`  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单角色分配</span></span><br><span class="line">.antMatchers(<span class="string">&quot;/test/authority&quot;</span>).hasRole(<span class="string">&quot;producer&quot;</span>)</span><br><span class="line">.antMatchers(<span class="string">&quot;/test/authorities&quot;</span>).hasAnyRole(<span class="string">&quot;producer&quot;</span>,<span class="string">&quot;consumer&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p>​      </p><h2 id="自定义403-错误页面"><a href="#自定义403-错误页面" class="headerlink" title="自定义403 错误页面"></a>自定义403 错误页面</h2><blockquote><p> <strong>security配置类中添加</strong></p></blockquote>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.exceptionHandling().accessDeniedPage(<span class="string">&quot;/unauth.html&quot;</span>);</span><br></pre></td></tr></table></figure><p>​      </p><h2 id="注解使用"><a href="#注解使用" class="headerlink" title="注解使用"></a>注解使用</h2><h3 id="Secured"><a href="#Secured" class="headerlink" title="@Secured"></a>@Secured</h3><p>指定访问目标 所需的 角色</p><p>注解可以被用在方法上，controller或者service层都可以</p><p><strong>开启注解使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在启动类或者是配置类上添加 启动注解</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(securedEnabled = true)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>访问目标上添加<code>角色</code>校验</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@Secured(&#123;&quot;ROLE_admin&quot;, &quot;ROLE_manager&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; getUserList() &#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getUserList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PreAuthorize"><a href="#PreAuthorize" class="headerlink" title="@PreAuthorize"></a>@PreAuthorize</h3><p>可以在进入方法前 进行校验</p><p><strong>开启注解支持</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br></pre></td></tr></table></figure><p><strong>在访问目标上添加<code>角色</code>or<code>权限</code>校验</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PreAuthorize(&quot;hasAnyAuthority(&#x27;admin&#x27;) and hasAnyRole(&#x27;ROLE_manager&#x27;)&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getById(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PostAuthorize"><a href="#PostAuthorize" class="headerlink" title="@PostAuthorize"></a>@PostAuthorize</h3><p>在方法执行后校验</p><p><strong>开启注解支持</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true )</span></span><br></pre></td></tr></table></figure><p><strong>在访问目标上添加<code>角色</code>or<code>权限</code>校验</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostAuthorize(&quot;hasAnyRole(&#x27;ROLE_manager&#x27;) and hasAnyAuthority(&#x27;admin&#x27;)&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getById(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PostFilter"><a href="#PostFilter" class="headerlink" title="@PostFilter"></a>@PostFilter</h3><p>对方法的返回结果进行过滤</p><p><strong>在访问目标上添加结果过滤</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//filterObject 是返回List中的单个对象，可以使用方法，或者是.属性 </span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@Secured(&#123;&quot;ROLE_admin&quot;, &quot;ROLE_manager&quot;&#125;)</span></span><br><span class="line"><span class="meta">@PostFilter(&quot;filterObject.get(&#x27;username&#x27;) == &#x27;admin&#x27;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; getUserList() &#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getUserList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PreFilter"><a href="#PreFilter" class="headerlink" title="@PreFilter"></a>@PreFilter</h3><p>对方法的入参进行校验</p><h2 id="用户注销"><a href="#用户注销" class="headerlink" title="用户注销"></a>用户注销</h2><ol><li><p>security配置 <code>登出路径</code> 和 <code>登出成功页面</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessUrl(<span class="string">&quot;/logoutSuccess.html&quot;</span>);</span><br><span class="line">需要放行logoutSuccess.html页面，但是只能有一个permitALL</span><br></pre></td></tr></table></figure></li></ol><h2 id="自动登录"><a href="#自动登录" class="headerlink" title="自动登录"></a>自动登录</h2><ol><li><p>创建token-userinfo 表</p><p>建表语句在<code>org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl</code>类中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> persistent_logins (</span><br><span class="line">username <span class="type">VARCHAR</span> ( <span class="number">64</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">series <span class="type">VARCHAR</span> ( <span class="number">64</span> ) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">token <span class="type">VARCHAR</span> ( <span class="number">64</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">last_used <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br></pre></td></tr></table></figure></li><li><p>配置数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置 PersistentTokenRepository 的数据源</span></span><br><span class="line"><span class="comment">//在配置类中添加</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">DataSource dataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersistentTokenRepository <span class="title">persistentTokenRepository</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JdbcTokenRepositoryImpl jdbcTokenRepository = <span class="keyword">new</span> JdbcTokenRepositoryImpl();</span><br><span class="line">    jdbcTokenRepository.setDataSource(dataSource);</span><br><span class="line">    <span class="keyword">return</span> jdbcTokenRepository;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>configure(HttpSecurity http)</code>中配置自动登录的数据库，token持续时间，userservice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http.and().rememberMe().tokenRepository(persistentTokenRepository())<span class="comment">//设置自动登录，数据库操作对象</span></span><br><span class="line">      .tokenValiditySeconds(<span class="number">60</span>) <span class="comment">//设置token的有效时间，单位秒</span></span><br><span class="line">      .userDetailsService(userDetailsService())</span><br></pre></td></tr></table></figure></li><li><p>在登录页面添加<strong>复选框：十天免登录</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remember-me&quot;</span>&gt;</span> 5分钟之内免登录</span><br></pre></td></tr></table></figure></li><li><p>测试结果查看，客户端的cookie，数据库中的数据</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库信息</span><br><span class="line">adminA1m2uLrSTC3CRQ9IRzyIgQ==Ieotk5N33+/5I6MNODR3gQ==2022-05-13 09:44:44</span><br></pre></td></tr></table></figure><p><strong>客户端cookie信息</strong></p><p><img src="/.io//image-20220513095136449.png" alt="image-20220513095136449"></p></li></ol><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="CSRF简介"><a href="#CSRF简介" class="headerlink" title="CSRF简介"></a>CSRF简介</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  CSRF(Cross-site request forgery)跨站请求伪造，也被称为&quot;One Click Attack&quot;或者Session Riding，通常缩写为CSRF或者</span><br><span class="line">XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本(XSS)，但它与XSS非常不同，XSS利用站点内的信任用户，而CSRF则通过伪装成受信</span><br><span class="line">任用户的请求来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行(因此对其进行防范的资源也相当稀少)和难以防范，所以被认为比</span><br><span class="line">XSS更具危险性。</span><br></pre></td></tr></table></figure><p><strong>SpringSecurity 4之后</strong></p><p>默认开启CSRF保护，会针对POST,PUT,PATCH,DELETE这些请求进行保护。</p><p>开启后，只能在同站进行访问，跨站是不能访问的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭CSRF</span></span><br><span class="line">http.csrf().disable();<span class="comment">//关闭csrf 防护</span></span><br></pre></td></tr></table></figure><p><strong>csrf的实现在过滤器中</strong></p><p><code>org.springframework.security.web.csrf.CsrfFilter</code>springSecurity 中的csrf功能时在这个过滤器中</p><h2 id="开启csrf校验"><a href="#开启csrf校验" class="headerlink" title="开启csrf校验"></a>开启csrf校验</h2><ol><li>在配置类中开启CSRF校验</li><li>需要在请求的时候传递_csrf的token</li></ol><h1 id="单点登录"><a href="#单点登录" class="headerlink" title="单点登录"></a>单点登录</h1><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="登录成功后的行为"><a href="#登录成功后的行为" class="headerlink" title="登录成功后的行为"></a>登录成功后的行为</h2><ol><li>defaultSuccessUrl,successForwardUrl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.formLogin().defaultSuccessUrl(<span class="string">&quot;/index&quot;</span>,<span class="keyword">true</span>).successForwardUrl(<span class="string">&quot;/index&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>http.successHandler(AuthenticationSuccessHandler successHandler)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">http.successHandler(AuthenticationSuccessHandler successHandler);</span><br><span class="line"><span class="comment">//配置</span></span><br><span class="line">.successHandler(<span class="keyword">new</span> authenticationSuccessHandler());</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">authenticationSuccessHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationSuccessHandler</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">            Object principal = authentication.getPrincipal();</span><br><span class="line">            PrintWriter writer = response.getWriter();</span><br><span class="line">            writer.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(principal));</span><br><span class="line">            writer.flush();</span><br><span class="line">            writer.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//Lamda写法</span></span><br><span class="line">.successHandler((req, resp, authentication) -&gt; &#123;</span><br><span class="line">    Object principal = authentication.getPrincipal();</span><br><span class="line">    resp.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">    PrintWriter out = resp.getWriter();</span><br><span class="line">    out.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(principal));</span><br><span class="line">    out.flush();</span><br><span class="line">    out.close();</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="登录失败后的行为"><a href="#登录失败后的行为" class="headerlink" title="登录失败后的行为"></a>登录失败后的行为</h2><ol><li>```java<br>.failureUrl(“/failure”) //跳转登录失败页面<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. ```java</span><br><span class="line">   //登录失败，处理方法，前后端分离时使用</span><br><span class="line">   .failureHandler((req, resp, e) -&gt; &#123;</span><br><span class="line">       resp.setContentType(&quot;application/json;charset=utf-8&quot;);</span><br><span class="line">       PrintWriter out = resp.getWriter();</span><br><span class="line">       out.write(e.getMessage());</span><br><span class="line">       out.flush();</span><br><span class="line">       out.close();</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="未认证时访问其他页面是的行为"><a href="#未认证时访问其他页面是的行为" class="headerlink" title="未认证时访问其他页面是的行为"></a>未认证时访问其他页面是的行为</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里主要是针对，前后端分离的情况，后台没有办法重定向。 </span></span><br><span class="line">http.exceptionHandling().authenticationEntryPoint((req,resp,authException) -&gt; &#123;</span><br><span class="line">            resp.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">            PrintWriter writer = resp.getWriter();</span><br><span class="line">            writer.write(<span class="string">&quot;尚未登录，清闲登录&quot;</span>);</span><br><span class="line">            writer.flush();</span><br><span class="line">            writer.close();</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2 id="注销登录后返回json数据"><a href="#注销登录后返回json数据" class="headerlink" title="注销登录后返回json数据"></a>注销登录后返回json数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">http.logout()   .logoutUrl(<span class="string">&quot;/logout&quot;</span>)</span><br><span class="line">                .logoutSuccessUrl(<span class="string">&quot;/logoutSuccess&quot;</span>)</span><br><span class="line">                .logoutSuccessHandler((req,resp,auth) -&gt; &#123;</span><br><span class="line">                    Object principal = auth.getPrincipal();</span><br><span class="line">                    resp.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">                    PrintWriter writer = resp.getWriter();</span><br><span class="line">                    writer.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(principal));</span><br><span class="line">                    writer.write(<span class="string">&quot;登出成功&quot;</span>);</span><br><span class="line">                    writer.flush();</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure><h2 id="配置用户的方式"><a href="#配置用户的方式" class="headerlink" title="配置用户的方式"></a>配置用户的方式</h2><ol><li><p>配置在内存中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    auth.inMemoryAuthentication()</span><br><span class="line">        .withUser(<span class="string">&quot;aoa&quot;</span>)</span><br><span class="line">        .password(passwordEncoder()</span><br><span class="line">        .encode(<span class="string">&quot;123&quot;</span>))</span><br><span class="line">        .roles(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置UserDetailsService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 重写方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> UserDetailsService <span class="title">userDetailsService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在这里创建</span></span><br><span class="line">        InMemoryUserDetailsManager inMemoryUserDetailsManager = <span class="keyword">new</span> InMemoryUserDetailsManager();</span><br><span class="line">        inMemoryUserDetailsManager.createUser(User.withUsername(<span class="string">&quot;bin&quot;</span>).password(passwordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;bin&quot;</span>).build());</span><br><span class="line">        inMemoryUserDetailsManager.createUser(User.withUsername(<span class="string">&quot;sofm&quot;</span>).password(passwordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;sofm&quot;</span>).build());</span><br><span class="line">        <span class="keyword">return</span> inMemoryUserDetailsManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 在configure(auth)中配置</span></span><br><span class="line"> auth.userDetailsService((userName)-&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="权限继承"><a href="#权限继承" class="headerlink" title="权限继承"></a>权限继承</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新版本可能配置的字符串中使用 \n 分割   </span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function">RoleHierarchy <span class="title">roleHierarchy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RoleHierarchyImpl hierarchy = <span class="keyword">new</span> RoleHierarchyImpl();</span><br><span class="line">        hierarchy.setHierarchy(<span class="string">&quot;ROLE_admin &gt; ROLE_bin&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> hierarchy;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习记录</title>
      <link href="/2022/04/06/Docker%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/04/06/Docker%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><a href="https://www.docker.com/">官网</a></p><p><a href="https://docs.docker.com/">文档</a></p><p><a href="https://hub.docker.com/">仓库</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li><p>安装yum和配置镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装yum</span></span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加阿里云镜像</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">  --add-repo \</span><br><span class="line">  http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装最近稳定版docker</span></span><br><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li><li><p>启动docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li><li><p>测试docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">以下信息表示你的docker安装成功</span></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br></pre></td></tr></table></figure></li><li><p>卸载docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载docker</span></span><br><span class="line">yum remove docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除镜像</span></span><br><span class="line">rm -rf /var/lib/docker</span><br><span class="line">rm -rf /var/lib/containerd</span><br></pre></td></tr></table></figure></li></ol><h2 id="阿里云镜像加速"><a href="#阿里云镜像加速" class="headerlink" title="阿里云镜像加速"></a>阿里云镜像加速</h2><h2 id="docker-run的运行流程图"><a href="#docker-run的运行流程图" class="headerlink" title="docker run的运行流程图"></a>docker run的运行流程图</h2><p><img src="/.io//image-20220407111402318.png" alt="image-20220407111402318"></p><h2 id="docker与虚拟机对比，为什么快？"><a href="#docker与虚拟机对比，为什么快？" class="headerlink" title="docker与虚拟机对比，为什么快？"></a>docker与虚拟机对比，为什么快？</h2><h1 id="docker-的常用命令"><a href="#docker-的常用命令" class="headerlink" title="docker 的常用命令"></a>docker 的常用命令</h1><h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br><span class="line">docker info</span><br><span class="line">docker 命令 --help # 帮助命令</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="帮助文档"><a href="#帮助文档" class="headerlink" title="帮助文档"></a>帮助文档</h2><p><a href="https://docs.docker.com/engine/reference/run/">命令</a></p><p><a href="https://hub.docker.com/">docker hub</a></p><h2 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h2><p><strong>docker images</strong> 查看本地所有镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><strong>docker search 镜像</strong>   搜索镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">这个搜索是和在docker hub  中搜索是一项的</span></span><br><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><p><strong>docker pull 镜像 [:tag]</strong>  下载镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">默认下载是latest版本</span></span><br><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><p><strong>docker rmi 镜像name/id [-f]</strong> 删除镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 不加版本号，默认是latest</span></span><br><span class="line">docker rmi -f mysql</span><br><span class="line">docker rmi -f mysql hello-world # 删除多个镜像</span><br><span class="line">docker rmi -f $(docker images -aq) # 删除所有镜像</span><br></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2><p><strong>docker run [参数] image      创建并启动容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker run -it centos /bin/bash#以交互的方式启动容器</span><br><span class="line"></span><br><span class="line">[root@localhost /]# docker run -it centos /bin/bash</span><br><span class="line">[root@9dc8ce07f368 /]# ls# @9dc8ce07f368 是容器id</span><br><span class="line">bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">[root@9dc8ce07f368 /]# exit#退出并删除容器</span><br><span class="line">exit</span><br><span class="line">[root@localhost /]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">ex1</span></span><br><span class="line">docker run -d -p=3344:80 --name=nginx nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>exit 退出容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p><strong>ctrl + p +q</strong> 退出容器,但不删除容器</p><p><strong>docker ps   查询容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps#查询正在运行的容器</span><br><span class="line">docker ps -a#查询所有的容器，运行+历史运行的容器</span><br><span class="line">docker ps -q#显示容器id</span><br></pre></td></tr></table></figure><p><strong>docker rm</strong> 删除容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm containerid#删除的容器必须停止运行</span><br><span class="line">docker rm $(docker ps -aq)# 删除所有容器</span><br><span class="line">docker ps -aq|xargs docker rm # linux 管道传参</span><br></pre></td></tr></table></figure><p><strong>启动和停止容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start #启动容器</span><br><span class="line">docker restart #重启容器</span><br><span class="line">docker stop #停止容器</span><br><span class="line">docker kill #强制停止容器</span><br></pre></td></tr></table></figure><h2 id="常用的其他命令"><a href="#常用的其他命令" class="headerlink" title="常用的其他命令"></a>常用的其他命令</h2><p><strong>查看日志</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 运行容器</span></span><br><span class="line">docker run --name test -d centos /bin/sh -c &quot;while true; do $(echo date); sleep 1; done&quot;</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看日志</span></span><br><span class="line">docker logs -tf -n 2 --until=2s containerid</span><br></pre></td></tr></table></figure><p><strong>查看容器中的进程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker top bc63cfe835fb</span><br><span class="line"></span><br><span class="line">[root@localhost /]# docker top bc63cfe835fb</span><br><span class="line">UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD</span><br><span class="line">root                123674              123652              0                   10:14               ?                   00:00:00            /bin/sh -c while true; do date; sleep 1; done</span><br><span class="line">root                124989              123674              0                   10:23               ?                   00:00:00            /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleep 1</span><br><span class="line">[root@localhost /]# </span><br></pre></td></tr></table></figure><p><strong>查看容器中的元数据</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect bc63cfe835fb</span><br></pre></td></tr></table></figure><p><strong>进入正在运行的容器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入后，开启一个新的终端</span></span><br><span class="line">docker exec -it bc63cfe835fb /bin/bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">进入后，进入正在执行的终端</span></span><br><span class="line">docker attach bc63cfe835fb</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>从容器传递文件到主机上</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp containerid:path 宿主机上path</span><br><span class="line">docker cp test:/home/wangzhe.txt /home/test</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>查看容器的运行状况</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stats</span><br><span class="line">CONTAINER ID   NAME      CPU %     MEM USAGE / LIMIT     MEM %     NET I/O        BLOCK I/O     PIDS</span><br><span class="line">5895b696ec89   tomcat    0.22%     128.3MiB / 2.727GiB   4.59%     15kB / 138kB   2.34MB / 0B   36</span><br></pre></td></tr></table></figure><h2 id="补充命令"><a href="#补充命令" class="headerlink" title="补充命令"></a>补充命令</h2><p><strong>镜像重命名</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag imageid updateinfo:tag</span><br></pre></td></tr></table></figure><p><strong>镜像打包与加载</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker save -o test.tar 15296797459/diycentos:1.0</span><br><span class="line"></span><br><span class="line">docker load</span><br></pre></td></tr></table></figure><p><strong>查看容器网络</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network</span><br></pre></td></tr></table></figure><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p><a href="https://docs.portainer.io/v/ce-2.11/start/install/server/docker/linux">portainer 官网</a></p><p><strong>安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer-ce</span><br><span class="line">docker volume create portainer_data</span><br><span class="line">docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">9000 是可视化界面的访问地址</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h1><h2 id="修改保存镜像"><a href="#修改保存镜像" class="headerlink" title="修改保存镜像"></a>修改保存镜像</h2><p><strong>提交修改后的容器为新的镜像</strong></p><blockquote><p>对于下载的镜像修改后，保存为新的镜像，类似于快照</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker commit -a=&quot;author&quot; -m=&quot;comonent&quot; containerid new_image_name:tag  </span><br><span class="line">[root@localhost test]# docker commit -a=&quot;wangzhe&quot; -m=&quot;add a new web app&quot; 5895b696ec89 tomcat_prime:1.0  </span><br><span class="line">sha256:156c35decf5d5ea65156111c2bbc2e56930d0f56d0d56520fa047c81cbb1179e</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY               TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat_prime             1.0       156c35decf5d   5 seconds ago   684MB</span></span><br><span class="line">tomcat                   latest    b00440a36b99   6 days ago      680MB</span><br><span class="line">nginx                    latest    12766a6745ee   9 days ago      142MB</span><br><span class="line">portainer/portainer-ce   2.11.1    ed396c816a75   8 weeks ago     280MB</span><br><span class="line">portainer/portainer-ce   latest    ed396c816a75   8 weeks ago     280MB</span><br><span class="line">hello-world              latest    feb5d9fea6a5   6 months ago    13.3kB</span><br><span class="line">centos                   latest    5d0da3dc9764   6 months ago    231MB</span><br></pre></td></tr></table></figure><h1 id="容器数据卷"><a href="#容器数据卷" class="headerlink" title="容器数据卷"></a>容器数据卷</h1><p><strong>挂载数据卷</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker run -it --name centos7 -v /home/test:/home centos /bin/bash</span><br></pre></td></tr></table></figure><h2 id="实战：docker-安装mysql"><a href="#实战：docker-安装mysql" class="headerlink" title="实战：docker 安装mysql"></a>实战：docker 安装mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3310:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql --name mysql -e MYSQL_ROOT_PASSWORD=343621  mysql:latest</span><br><span class="line"><span class="meta">#</span><span class="bash"> 挂载配置文件和数据文件</span></span><br></pre></td></tr></table></figure><h2 id="具名和匿名挂载"><a href="#具名和匿名挂载" class="headerlink" title="具名和匿名挂载"></a>具名和匿名挂载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">具名挂载</span></span><br><span class="line">docker run --name nginx05 -d -P -v juming-nginx:/etc/nginx nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询数据卷，匿名数据卷是随机字符串，具名数据卷是有名字的</span></span><br><span class="line">[root@localhost conf.d]# docker volume ls</span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line">local     071c733fcd2db97f0aee68cf338d2ec49f344670b029cd6173c8b247dee33736</span><br><span class="line">local     6694db8ec1e0347998c2b744c40fa4cce16490600da539ca6759c9b54eb0e5af</span><br><span class="line">local     a4ca0c940bb15e60c655a7d97753d2745783a3db3a6687ec16b4dd8acee86449</span><br><span class="line">local     juming-nginx</span><br><span class="line">local     portainer_data</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看卷详情</span></span><br><span class="line">[root@localhost conf.d]# docker volume inspect juming-nginx </span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;CreatedAt&quot;: &quot;2022-04-11T16:30:14+08:00&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Labels&quot;: null,</span><br><span class="line">        &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/juming-nginx/_data&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;juming-nginx&quot;,</span><br><span class="line">        &quot;Options&quot;: null,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="meta">#</span><span class="bash"> Mountpoint 是数据卷在宿主机上的位置</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#数据卷挂载：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">具名挂载</span></span><br><span class="line"><span class="meta">#</span><span class="bash">匿名挂载</span></span><br><span class="line"><span class="meta">#</span><span class="bash">指定路径挂载</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 指定宿主机读取权限</span></span></span><br><span class="line">:roreadonly</span><br><span class="line">:rwreadwrite</span><br><span class="line">docker run --name nginx05 -d -P -v juming-nginx:/etc/nginx:ro nginx</span><br><span class="line">docker run --name nginx05 -d -P -v juming-nginx:/etc/nginx:rw nginx</span><br></pre></td></tr></table></figure><h2 id="dockerFile"><a href="#dockerFile" class="headerlink" title="dockerFile"></a>dockerFile</h2><p>dockerfile 就是用来创建镜像的</p><h2 id="dockerFile构建镜像时进行卷挂载"><a href="#dockerFile构建镜像时进行卷挂载" class="headerlink" title="dockerFile构建镜像时进行卷挂载"></a>dockerFile构建镜像时进行卷挂载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写dockerfile  文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加的挂载卷，在根目录中</span></span><br><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">VOLUME [&quot;v01&quot;, &quot;v02&quot;]</span><br><span class="line"></span><br><span class="line">CMD echo &quot;----end-----&quot;</span><br><span class="line"></span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行创建命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -f文件位置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -t创建的镜像名：版本号</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 必须要加上 .</span></span><br><span class="line">docker build -f dockfile1 -t wangzhe/centos:1.0 .</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">在宿主机中卷是匿名数据卷</span></span><br><span class="line">1. 使用 docker inspect container   找mount</span><br><span class="line">2. 使用 docker volume inspect  vid  找到挂载路径</span><br><span class="line">3. </span><br></pre></td></tr></table></figure><h2 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h2><p>多个容器之间同步数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--volumes-from containerid</span><br></pre></td></tr></table></figure><h2 id="mysql数据共享"><a href="#mysql数据共享" class="headerlink" title="mysql数据共享"></a>mysql数据共享</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql01 -d -p 3310:3306 -v /etc/mysql/conf.d -v /var/lib/mysql -e MYSQL_ROOT_PASSWORD=343621 mysql:latest</span><br><span class="line">docker run --name mysql01 -d -p 3311:3306 --volumes-from mysql01 -e MYSQL_ROOT_PASSWORD=343621 mysql:latest</span><br></pre></td></tr></table></figure><h1 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h1><h2 id="dockerfile-指令"><a href="#dockerfile-指令" class="headerlink" title="dockerfile 指令"></a>dockerfile 指令</h2><ul><li>所有指令必须大写</li><li>指令从上到下执行</li><li>每条指令都是一层镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM container[centos,nginx]#声明父镜像</span><br><span class="line">MAINTAINER  姓名+邮箱 #声明维护者</span><br><span class="line">RUN #镜像构建的时候执行的一些命令</span><br><span class="line">ADD#添加其他镜像，tomcat，jdk，nginx之类的压缩包，会自动解压</span><br><span class="line">WORKDIR#工作目录，进入bash后的所在目录【centos默认是/】</span><br><span class="line">VOLUME#挂载的目录</span><br><span class="line">EXPOSE#暴露的端口配置</span><br><span class="line">CMD#启动容器的时候执行，只会执行最后一条cmd命令，可以被替换但不能被追加</span><br><span class="line">ENTRYPOINT#指定容器启动的时候执行的命令，可以追加命令</span><br><span class="line">ONBUILD#当构建一个被继承的dockfile时，会执行</span><br><span class="line">COPY#类似于add，将我们的文件拷贝到镜像中去</span><br><span class="line">ENV#构建的时候设置的环境变量，构件时传递的参数</span><br></pre></td></tr></table></figure><h2 id="构建my-centos"><a href="#构建my-centos" class="headerlink" title="构建my-centos"></a>构建my-centos</h2><p>在基础镜像上添加 vim和ipconfig功能，体验dockerfile的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER wangzhe&lt;2546972682@qq.com&gt;</span><br><span class="line"></span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line"></span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD echo $MYPATH</span><br><span class="line">CMD echo ----end----</span><br><span class="line">CMD /bin/bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">构建</span></span><br><span class="line">docker build -f dockerfile-centos -t dockerfile-centos:1.0 .</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">工作目录 和 ifconfig命令可以使用</span></span><br><span class="line">[root@localhost test-dockfile]# docker run -it --name dockfilecentos  23376f473200</span><br><span class="line">[root@536088d44218 local]# pwd</span><br><span class="line">/usr/local</span><br><span class="line">[root@536088d44218 local]# ifconfig</span><br></pre></td></tr></table></figure><h2 id="CMD-与-ENTRYPOINT-区别"><a href="#CMD-与-ENTRYPOINT-区别" class="headerlink" title="CMD  与 ENTRYPOINT 区别"></a>CMD  与 ENTRYPOINT 区别</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">cmd  会在运行容器时运行最后一条命令，可以被替换，但不能追加</span><br><span class="line">entrypoint  会在运行容器时运行，可以在后面追加命令</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">cmd  执行 ls -a命令</span></span><br><span class="line">CMD [&quot;ls&quot;,&quot;-a&quot;]</span><br><span class="line"></span><br><span class="line">[root@localhost test]# docker run 0d1a612596fa</span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">.dockerenv</span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">。。。</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#添加 -l 参数</span></span></span><br><span class="line">[root@localhost test]# docker run 0d1a612596fa -l</span><br><span class="line">docker: Error response from daemon: failed to create shim: OCI runtime create failed: container_linux.go:380: starting container process caused: exec: &quot;-l&quot;: executable file not found in $PATH: unknown.</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#需要在后面添加完整的命令</span></span></span><br><span class="line">[root@localhost test]# docker run 0d1a612596fa ls -al</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x.   1 root root   6 Apr 12 07:37 .</span><br><span class="line">drwxr-xr-x.   1 root root   6 Apr 12 07:37 ..</span><br><span class="line">-rwxr-xr-x.   1 root root   0 Apr 12 07:37 .dockerenv</span><br><span class="line">lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -&gt; usr/bin</span><br><span class="line">drwxr-xr-x.   5 root root 340 Apr 12 07:37 dev</span><br><span class="line">drwxr-xr-x.   1 root root  66 Apr 12 07:37 etc</span><br><span class="line">drwxr-xr-x.   2 root root   6 Nov  3  2020 home</span><br><span class="line">lrwxrwxrwx.   1 root root   7 Nov  3  2020 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root   9 Nov  3  2020 lib64 -&gt; usr/lib64</span><br><span class="line">drwx------.   2 root root   6 Sep 15  2021 lost+found</span><br><span class="line">drwxr-xr-x.   2 root root   6 Nov  3  2020 media</span><br><span class="line">drwxr-xr-x.   2 root root   6 Nov  3  2020 mnt</span><br><span class="line">drwxr-xr-x.   2 root root   6 Nov  3  2020 opt</span><br><span class="line">dr-xr-xr-x. 250 root root   0 Apr 12 07:37 proc</span><br><span class="line">dr-xr-x---.   2 root root 162 Sep 15  2021 root</span><br><span class="line">drwxr-xr-x.  11 root root 163 Sep 15  2021 run</span><br><span class="line">lrwxrwxrwx.   1 root root   8 Nov  3  2020 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root   6 Nov  3  2020 srv</span><br><span class="line">dr-xr-xr-x.  13 root root   0 Apr 11 07:11 sys</span><br><span class="line">drwxrwxrwt.   7 root root 171 Sep 15  2021 tmp</span><br><span class="line">drwxr-xr-x.  12 root root 144 Sep 15  2021 usr</span><br><span class="line">drwxr-xr-x.  20 root root 262 Sep 15  2021 var</span><br></pre></td></tr></table></figure><p><strong>entrypoint命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker run 1dc871c9c046</span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">.dockerenv</span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">。。。。</span><br><span class="line">[root@localhost test]# docker run 1dc871c9c046 -l</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x.   1 root root   6 Apr 12 07:39 .</span><br><span class="line">drwxr-xr-x.   1 root root   6 Apr 12 07:39 ..</span><br><span class="line">-rwxr-xr-x.   1 root root   0 Apr 12 07:39 .dockerenv</span><br><span class="line">lrwxrwxrwx.   1 root root   7 Nov  3  2020 bin -&gt; usr/bin</span><br><span class="line">。。。。。</span><br></pre></td></tr></table></figure><h2 id="实战tomcat"><a href="#实战tomcat" class="headerlink" title="实战tomcat"></a>实战tomcat</h2><p>dockerfile文件以<code>Dockerfile</code>命名，是标准的名字，在构建的时候就不需要加-f</p><p><strong># tomcat 目录</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要准备tomcat和jdk的压缩文件，使用add命令添加时会自动解压</span></span><br><span class="line">[root@localhost tomcat]# ll</span><br><span class="line">总用量 155024</span><br><span class="line">drwxr-xr-x. 9 root  root        220 4月  12 16:41 apache-tomcat-10.0.20</span><br><span class="line">-rw-r--r--. 1 root  root   11915655 4月  12 16:38 apache-tomcat-10.0.20.tar.gz</span><br><span class="line">-rw-r--r--. 1 root  root        653 4月  12 16:50 Dockerfile</span><br><span class="line">drwxr-xr-x. 8 10143 10143       273 12月 16 03:30 jdk1.8.0_321</span><br><span class="line">-rw-r--r--. 1 root  root  146815279 4月  12 16:36 jdk-8u321-linux-x64.tar.gz</span><br><span class="line">-rw-r--r--. 1 root  root          7 4月  12 16:31 readme.txt</span><br></pre></td></tr></table></figure><p><strong>#Dockerfile文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost tomcat]# cat Dockerfile </span><br><span class="line">FROM centos:centos7</span><br><span class="line"></span><br><span class="line">MAINTAINER wangzhe&lt;2546972682@qq.com&gt;</span><br><span class="line"></span><br><span class="line">COPY readme.txt /usr/local/readme.txt</span><br><span class="line"></span><br><span class="line">ADD apache-tomcat-10.0.20.tar.gz /usr/local/</span><br><span class="line">ADD jdk-8u321-linux-x64.tar.gz /usr/local</span><br><span class="line"></span><br><span class="line">RUN yum -y install vim</span><br><span class="line"></span><br><span class="line">ENV MYPATH /usr/local</span><br><span class="line"></span><br><span class="line">WORKDIR $MYPATH</span><br><span class="line"></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_321</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV CATALINA_HOME /usr/local/apache-tomcat-10.0.20</span><br><span class="line">ENV CATALINA_BASH /usr/local/apache-tomcat-10.0.20</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin:$CATALINA_HOME/bin</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">CMD /usr/local/apache-tomcat-10.0.20/bin/startup.sh &amp;&amp; tail -F /usr/local/apache-tomcat-10.0.20/bin/logs/catalina.out</span><br></pre></td></tr></table></figure><p><strong>镜像构建及运行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 构建镜像不用添加-f</span></span><br><span class="line">docker build -t diy-centos:1.0 .</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行镜像</span></span><br><span class="line">docker run -d -p 9090:8080 --name wangzhetomcat -v /home/admin/build/tomcat/test:/usr/local/apache-tomcat-10.0.20/webapps/test \</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> -v /home/admin/build/tomcat/tomcatlogs/:/usr/<span class="built_in">local</span>/apache-tomcat-10.0.20/logs diy-centos:1.0</span> </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在挂载<span class="built_in">test</span>目录中添加项目信息</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试地址</span></span><br><span class="line">192.168.112.128:9090</span><br><span class="line">192.168.112.128:9090/test</span><br></pre></td></tr></table></figure><h2 id="发布镜像"><a href="#发布镜像" class="headerlink" title="发布镜像"></a>发布镜像</h2><h3 id="发布到-hub-docker-com"><a href="#发布到-hub-docker-com" class="headerlink" title="发布到 hub.docker.com"></a>发布到 hub.docker.com</h3><p><strong>1.登录网站</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u account -p password</span><br></pre></td></tr></table></figure><p><strong>2.push</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost .docker]# docker push 15296797459/diycentos:1.0</span><br><span class="line">The push refers to repository [docker.io/15296797459/diycentos]</span><br><span class="line">174b635a5058: Pushed </span><br><span class="line">9f7ffe7837ee: Pushed </span><br><span class="line">34ee798fa05a: Pushed </span><br><span class="line">e7f006c9c590: Pushed </span><br><span class="line">174f56854903: Pushed </span><br><span class="line">1.0: digest: sha256:6876bab1fe0fdc9d83bcbbaac25cc744f0eca5a87a4a64179613e193b91da675 size: 1373</span><br></pre></td></tr></table></figure><h3 id="发布镜像到阿里云容器镜像服务"><a href="#发布镜像到阿里云容器镜像服务" class="headerlink" title="发布镜像到阿里云容器镜像服务"></a>发布镜像到阿里云容器镜像服务</h3><p><strong>…</strong></p><h1 id="docker-网络"><a href="#docker-网络" class="headerlink" title="docker 网络"></a>docker 网络</h1><p><strong>查看网络</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# ip addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:d2:b1:f9 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.112.128/24 brd 192.168.112.255 scope global noprefixroute dynamic ens33</span><br><span class="line">       valid_lft 1563sec preferred_lft 1563sec</span><br><span class="line">    inet6 fe80::d86c:8784:85bc:385d/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:06:40:cc brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:06:40:cc brd ff:ff:ff:ff:ff:ff</span><br><span class="line">5: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    link/ether 02:42:b8:de:8e:fb brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"><span class="meta">#</span><span class="bash">docker0 是docker的网卡</span></span><br><span class="line"><span class="meta">#</span><span class="bash">每个容器都对应一个网卡</span></span><br></pre></td></tr></table></figure><p>**启动容器后的ip addr **</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">容器启动后会多出一个网卡</span></span><br><span class="line">7: veth6ce638d@if6: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">    link/ether e2:82:63:8d:f9:d2 brd ff:ff:ff:ff:ff:ff link-netnsid 0</span><br><span class="line">    inet6 fe80::e082:63ff:fe8d:f9d2/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">       </span><br><span class="line"><span class="meta">#</span><span class="bash">通过docker inspect containerid 查看容器 ip地址</span></span><br><span class="line"> &quot;SecondaryIPv6Addresses&quot;: null,</span><br><span class="line">            &quot;EndpointID&quot;: &quot;fbf8f5976927865501758b0bfffb8f6d9b3ded6b1866d7930fbc9d9e49dc1ade&quot;,</span><br><span class="line">            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,</span><br><span class="line">            &quot;GlobalIPv6Address&quot;: &quot;&quot;,</span><br><span class="line">            &quot;GlobalIPv6PrefixLen&quot;: 0,</span><br><span class="line">            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,</span><br><span class="line">            &quot;IPPrefixLen&quot;: 16,</span><br><span class="line">            &quot;IPv6Gateway&quot;: &quot;&quot;,</span><br><span class="line">            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span><br><span class="line">            &quot;Networks&quot;: &#123;</span><br><span class="line">                &quot;bridge&quot;: &#123;</span><br><span class="line">                    &quot;IPAMConfig&quot;: null,</span><br><span class="line">                    &quot;Links&quot;: null,</span><br><span class="line">                    &quot;Aliases&quot;: null,</span><br><span class="line">                    &quot;NetworkID&quot;: &quot;70dee68966da2ee89e5c29d55f358c92c153db0bb239379193e4a79a636ff78e&quot;,</span><br><span class="line">                    &quot;EndpointID&quot;: &quot;fbf8f5976927865501758b0bfffb8f6d9b3ded6b1866d7930fbc9d9e49dc1ade&quot;,</span><br><span class="line">                    </span><br><span class="line"> </span><br></pre></td></tr></table></figure><blockquote><p>docker0是所有容器的网关，多有容器都与docker0是同一网段</p></blockquote><p>不同容器之间是可以相互 ping 通的</p><h2 id="实现ping容器名来连通"><a href="#实现ping容器名来连通" class="headerlink" title="实现ping容器名来连通"></a>实现ping容器名来连通</h2><p><strong>–link</strong></p><blockquote><p>这种方式已经不流行了</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">使用link链接后可以直接使用容器名称来ping</span></span><br><span class="line">docker run -d -it -P --name tomcat02 --link tomcat01 tomcat</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --link 的本质是：在/etc/hosts 文件中添加映射</span></span><br><span class="line"><span class="meta">#</span><span class="bash">172.17.0.2      tomcat01 3cbc794672f4</span></span><br><span class="line"></span><br><span class="line">[root@localhost /]# docker exec -it tomcat02 cat /etc/hosts</span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.17.0.2      tomcat01 3cbc794672f4</span><br><span class="line">172.17.0.3      70a222b7a8a2</span><br></pre></td></tr></table></figure><h2 id="docker自定义网络"><a href="#docker自定义网络" class="headerlink" title="docker自定义网络"></a>docker自定义网络</h2><p><strong>容器互联</strong></p><blockquote><p>网络模式</p></blockquote><p><strong>创建网络</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# docker network create -d bridge --subnet 192.168.0.0/16 --gateway 192.168.0.1 mynet</span><br><span class="line">cac186e0f9036603661970829a8d7efd14564db2a5e7c0687a402e7cde593307</span><br><span class="line">[root@localhost /]# docker network ls</span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">70dee68966da   bridge    bridge    local</span><br><span class="line">2bafb20418b7   host      host      local</span><br><span class="line">cac186e0f903   mynet     bridge    local</span><br><span class="line">febb418c2c60   none      null      local</span><br><span class="line"></span><br><span class="line">[root@localhost /]# docker network inspect mynet</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;mynet&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;cac186e0f9036603661970829a8d7efd14564db2a5e7c0687a402e7cde593307&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2022-04-13T15:11:40.89222403+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;192.168.0.0/16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;192.168.0.1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>容器使用自定义网络</strong></p><p><strong>–net mynet</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# docker run --name centos02 -d -it --net mynet centos</span><br><span class="line"></span><br><span class="line">[root@localhost /]# docker network inspect mynet </span><br><span class="line"></span><br><span class="line">        &quot;Containers&quot;: &#123;</span><br><span class="line">            &quot;3dd7a67c4fca04d2a24d876195260c7e494a72c03af31695ea54e4f30080b33d&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;centos01&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;37cd1c3199bc6a386efccff45523609f38cc30063f4e6de9f94ce63c49a2c4e6&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:c0:a8:00:02&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;192.168.0.2/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;ef58a6b1a377f6516838a00477bee0d6fbef56757dd684d7726e9632df2d00d9&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;centos02&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;3cba83a82663a555c7a7b3c8c12c01e71d8fddb077d4e97d63ad8cbb49b52f97&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:c0:a8:00:03&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;192.168.0.3/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ping centos02</span><br><span class="line">pong</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="网络连通"><a href="#网络连通" class="headerlink" title="网络连通"></a>网络连通</h2><p>本质上是将容器添加到目标网络中去</p><p><strong>docker network connect</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network connect network container</span><br></pre></td></tr></table></figure><h1 id="实战：部署redis集群"><a href="#实战：部署redis集群" class="headerlink" title="实战：部署redis集群"></a>实战：部署redis集群</h1><h1 id="springboot微服务打包"><a href="#springboot微服务打包" class="headerlink" title="springboot微服务打包"></a>springboot微服务打包</h1><h1 id="常见的坑"><a href="#常见的坑" class="headerlink" title="常见的坑"></a>常见的坑</h1><p><strong>docker run 之后发现容器停止了</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">docker run image; 如果容器没有启动前台程序，docker没有发现应用，就会自动停止，</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nginx 启动后，发现自己没有程序，就会停止运行</span></span><br></pre></td></tr></table></figure><p><strong>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the d</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">重启服务</span></span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure><p><strong>推送到hub.docker.com遇到的问题</strong></p><blockquote><p> denied: requested access to the resource is denied</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker push diy-tomcat:1.0</span><br><span class="line">The push refers to repository [docker.io/library/diy-tomcat]</span><br><span class="line">174b635a5058: Preparing </span><br><span class="line">9f7ffe7837ee: Preparing </span><br><span class="line">34ee798fa05a: Preparing </span><br><span class="line">e7f006c9c590: Waiting </span><br><span class="line">174f56854903: Waiting </span><br><span class="line">denied: requested access to the resource is denied</span><br><span class="line"></span><br><span class="line">原因：push的镜像应该是account/imagesname:version</span><br><span class="line">push 15296797459/diytomcat:version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloudAlibaba学习记录</title>
      <link href="/2022/03/24/SpringCloudAlibaba%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/03/24/SpringCloudAlibaba%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos"><a href="#Nacos" class="headerlink" title="Nacos"></a>Nacos</h1><p><a href="https://github.com/alibaba/nacos">官网</a></p><h2 id="nacos-的安装启动"><a href="#nacos-的安装启动" class="headerlink" title="nacos 的安装启动"></a>nacos 的安装启动</h2><p><a href="https://github.com/alibaba/nacos/releases">下载地址</a></p><p><strong>启动命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nacos/bin  <span class="comment">#进入bin目录</span></span><br><span class="line">sh startup.sh -m standalone <span class="comment">#standalone代表单机运行，非集群模式</span></span><br></pre></td></tr></table></figure><p><a href="http://192.168.112.128:8848/nacos/index.html">访问地址</a></p><h2 id="服务发现-基本使用"><a href="#服务发现-基本使用" class="headerlink" title="服务发现-基本使用"></a>服务发现-基本使用</h2><h4 id="生产者配置"><a href="#生产者配置" class="headerlink" title="生产者配置"></a>生产者配置</h4><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yaml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-nacos-provider</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>启动类配置使用<code>@EnableDiscoveryClient</code> 注解</p></li></ol><h4 id="消费者配置"><a href="#消费者配置" class="headerlink" title="消费者配置"></a>消费者配置</h4><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里使用loadbalancer 做负载均衡--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yaml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">83</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-nacos-consumer</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://cloud-nacos-provider</span></span><br></pre></td></tr></table></figure></li><li><p>手动注入restTemplate,在启动类上配置<code>@EnableDiscoveryClient</code>注解</p></li></ol><h2 id="配置中心-基本使用"><a href="#配置中心-基本使用" class="headerlink" title="配置中心-基本使用"></a>配置中心-基本使用</h2><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--必须添加这个依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>bootstrap.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3377</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-nacos-config</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span> <span class="comment"># 配置nacos config server地址</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span> <span class="comment">#配置文件的扩展名，默认为properties</span></span><br><span class="line"><span class="attr">refresh-enabled:</span> <span class="literal">true</span> <span class="comment"># 自动刷新默认开启，如果要关闭设置为false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 会到服务器的default namespace -&gt; DEFAULT_GROUP -&gt; cloud-nacos-config.yaml 的文件       </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="配置自动刷新"><a href="#配置自动刷新" class="headerlink" title="配置自动刷新"></a>配置自动刷新</h3><ol><li><code>cloud.nacos.config.refresh-enabled=true</code> 默认就是开启的。</li><li>在需要刷新的类上添加<code>@RefreshScope</code> 注解</li></ol><h3 id="profile粒度配置"><a href="#profile粒度配置" class="headerlink" title="profile粒度配置"></a>profile粒度配置</h3><p>关于粒度的配置必须放在<code>bootstrap.yaml</code>文件里面</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>测试后，放在<code>普通的application.yaml</code>文件里面也可以生效</p><h3 id="namespace-和-group-自定义配置"><a href="#namespace-和-group-自定义配置" class="headerlink" title="namespace 和 group 自定义配置"></a>namespace 和 group 自定义配置</h3><p><strong>namespace</strong>配置</p><ol><li><p>创建命名空间</p><p><img src="/.io//image-20220325152453581.png" alt="image-20220325152453581"></p></li><li><p>添加配置在自定义命名空间下</p><p><img src="/.io//image-20220325152617200.png" alt="image-20220325152617200"></p></li><li><p>bootstrap.yaml配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">      <span class="comment">#配置命名空间</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">7ab3b839-b579-402c-992b-bb2ea46a7172</span></span><br><span class="line">        <span class="comment">#配置分组</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">TEST_GROUP</span> </span><br></pre></td></tr></table></figure></li></ol><h3 id="dataid-扩展"><a href="#dataid-扩展" class="headerlink" title="dataid 扩展"></a>dataid 扩展</h3><p>这里不做详细介绍，用到的话，去官网查怎么用</p><p><a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-config">官网</a></p><h3 id="配置优先级"><a href="#配置优先级" class="headerlink" title="配置优先级"></a>配置优先级</h3><p>Spring Cloud Alibaba Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置。</p><ul><li>A: 通过 <code>spring.cloud.nacos.config.shared-configs[n].data-id</code> 支持多个共享 Data Id 的配置</li><li>B: 通过 <code>spring.cloud.nacos.config.extension-configs[n].data-id</code> 的方式支持多个扩展 Data Id 的配置</li><li>C: 通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置</li></ul><p>当三种方式共同使用时，他们的一个优先级关系是:A &lt; B &lt; C</p><h3 id="关闭nacos-config功能"><a href="#关闭nacos-config功能" class="headerlink" title="关闭nacos-config功能"></a>关闭nacos-config功能</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.cloud.nacos.config.enabled</span> = <span class="string">false</span></span><br></pre></td></tr></table></figure><h2 id="nacos集群"><a href="#nacos集群" class="headerlink" title="nacos集群"></a>nacos集群</h2><h1 id="sentinel"><a href="#sentinel" class="headerlink" title="sentinel"></a>sentinel</h1><h2 id="Sentinel控制台"><a href="#Sentinel控制台" class="headerlink" title="Sentinel控制台"></a>Sentinel控制台</h2><p><a href="https://github.com/alibaba/Sentinel/releases">sentinel控制台下载链接</a></p><p>控制台启动命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认是8080端口</span></span><br><span class="line">java -Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard.jar</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>控制台是懒加载的，只有当你访问一次应用后，控制台才会显示该引用的信息。</p><h2 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h2><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--nacos--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--sentinel--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yaml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8401</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloudalibaba-sentinel-service</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span> <span class="comment">#尝试端口，会从8719开始尝试，不行就+1</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span> <span class="comment">#配置控制台的地址</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="限流规则"><a href="#限流规则" class="headerlink" title="限流规则"></a>限流规则</h2><h2 id="熔断降级"><a href="#熔断降级" class="headerlink" title="熔断降级"></a>熔断降级</h2><p>在条件满足后，会熔断，超过熔断时间后，会慢慢放行。</p><h2 id="热点规则"><a href="#热点规则" class="headerlink" title="热点规则"></a>热点规则</h2><p>需要配置blockerhandler，错误信息自定义</p><p>如果不添加，默认显示的是程序的错误信息。</p><p>只有qps一种检验方式，是检验方法参数的次数，只要带了那个参数就会被计算进入检验，第几个参数应该是通过在方法上的生命顺序确定的。</p><p>必须使用<code>@SentinelResource(value = &quot;testHostKey&quot;)</code>,不添加这个在路径上添加热点规则，不生效的。</p><p>参数是从0开始</p><p>限流不处理程序异常错误，他只会处理不满足规则的错误。</p><p>熔断处理程序异常错误。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testHostKey&quot;)</span></span><br><span class="line"><span class="meta">@SentinelResource(value = &quot;testHostKey&quot;,blockHandler = &quot;testHostKeyHandler&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testHostKey</span><span class="params">(<span class="meta">@RequestParam(name = &quot;p1&quot;,required = false)</span> String p1,</span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="meta">@RequestParam(name = &quot;p2&quot;, required = false)</span> String p2)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;testHostKey:&quot;</span> + p1 + <span class="string">&quot;, &quot;</span> + p2);</span><br><span class="line">    <span class="comment">//        int i = 10/0;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testHostKey&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testHostKeyHandler</span><span class="params">(String p1, String p2, BlockException e)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;testHostKey:&quot;</span> + p1 + <span class="string">&quot;, &quot;</span> + p2);</span><br><span class="line">    System.out.println(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;testHostKeyHandler 苦苦&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="系统规则"><a href="#系统规则" class="headerlink" title="系统规则"></a>系统规则</h2><h2 id="sentinelResource-注解的name可以和路径相同吗"><a href="#sentinelResource-注解的name可以和路径相同吗" class="headerlink" title="@sentinelResource 注解的name可以和路径相同吗"></a>@sentinelResource 注解的name可以和路径相同吗</h2><p><a href="https://github.com/alibaba/Sentinel/wiki/%E6%B3%A8%E8%A7%A3%E6%94%AF%E6%8C%81">sentinelresource注解官网</a></p><p>fallback，相当于hystrix中的服务降级，用于处理程序异常时的兜底方法。</p><p>blockhandler,处理sentinel控制台违规异常</p><p>exceptionToIgnore ,会忽略异常，因此不会走fallback方法，但是仍然会被计算进入控制台规则中。</p><blockquote><p>情况一：</p></blockquote><p>当配置了fallback 和 blockhandler,两种配置同时生效，最后显示的是blockhandler的配置。</p><h2 id="sentinel-整合-rest-balancer"><a href="#sentinel-整合-rest-balancer" class="headerlink" title="sentinel 整合 rest+balancer"></a>sentinel 整合 rest+balancer</h2><p>因为ribbon现在已经被弃用，所以这里使用rest+balancer,</p><p>这里使用和demo中的没有什么不同，重点看下接下来整合openfeign的配置。</p><h2 id="sentinel-整合openFeign"><a href="#sentinel-整合openFeign" class="headerlink" title="sentinel 整合openFeign"></a>sentinel 整合openFeign</h2><p><a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/Sentinel">官网</a></p><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>application.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># feign 开启对 sentinel 的支持</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="规则持久化"><a href="#规则持久化" class="headerlink" title="规则持久化"></a>规则持久化</h2><p>之前的限流规则是临时的，应用重启后，配置的规则就会消失。</p><p>官方推荐持久化到nacos中。</p><p>这个持久化不是sentinel中的配置保存到nacos中，而是在nacos中保存信息，sentinel去读取，所以在sentinel中对规则的修改不会持保存到nacos中。</p><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yaml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8401</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloudalibaba-sentinel-service</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">ds1:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">            <span class="attr">dataId:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">            <span class="attr">groupId:</span> <span class="string">DEFAULT_GROUP</span></span><br><span class="line">            <span class="attr">data-type:</span> <span class="string">json</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">flow</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>在nacos配置中心中添加配置。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">文件的dataId,groupId,文件类型和yaml配置文件中的相同。</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="attr">&quot;resource&quot;</span>:<span class="string">&quot;/rateLimit/byUrl&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;limitApp&quot;</span>:<span class="string">&quot;default&quot;</span>,</span><br><span class="line">         <span class="attr">&quot;grade&quot;</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">&quot;count&quot;</span>:<span class="number">1</span>,</span><br><span class="line">         <span class="attr">&quot;strategy&quot;</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">&quot;controlBehavior&quot;</span>:<span class="number">0</span>,</span><br><span class="line">         <span class="attr">&quot;clusterMode&quot;</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>配置信息的解释：</p><p>resource: 资源名称<br> limitApp: 来源应用<br> grade: 阈值类型,0表示线程,1表示QPS<br> count: 单机阈值<br> strategy: 流控模式,0表示直接,1表示关联,2表示链路<br> controlBehavior: 流控效果,0表示快速失败,1表示Warm Up,2表示排队等待<br> clusterMode: 是否集群</p><h1 id="seata"><a href="#seata" class="headerlink" title="seata"></a>seata</h1><p>alibaba 解决分布式事务的 一套框架。</p><p><a href="https://seata.io/zh-cn/docs/user/quickstart.html">seata官网</a></p><p><a href="https://www.jb51.net/article/202333.htm">seata1.4使用教程</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
          <category> SpringCloudAlibaba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloudAlibaba </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper使用记录</title>
      <link href="/2022/03/10/Zookeeper%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/03/10/Zookeeper%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="基础了解和工具使用"><a href="#基础了解和工具使用" class="headerlink" title="基础了解和工具使用"></a>基础了解和工具使用</h1><blockquote><p>pretty zoo工具使用</p></blockquote><p><a href="https://github.com/vran-dev/PrettyZoo">PrettyZoo下载地址</a></p><blockquote><p>知识点</p></blockquote><ul><li>Zookeeper的节点有声明周期，与节点类型有关</li><li>有四种节点类型</li></ul>]]></content>
      
      
      <categories>
          
          <category> Zookeeper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud学习记录</title>
      <link href="/2022/03/04/SpringCloud%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/03/04/SpringCloud%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前置基础"><a href="#前置基础" class="headerlink" title="前置基础"></a>前置基础</h1><h2 id="springboot和springcloud版本匹配"><a href="#springboot和springcloud版本匹配" class="headerlink" title="springboot和springcloud版本匹配"></a>springboot和springcloud版本匹配</h2><p><a href="https://start.spring.io/actuator/info">查询网站</a></p><p>获取json字符串后使用工具进行格式化</p><h2 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h2><p><strong>选择官网推荐的</strong></p><p> <img src="/.io//image-20220304152136541.png" alt="image-20220304152136541"></p><p> 使用官网推荐的版本</p><p> <img src="/.io//image-20220304152152635.png" alt="image-20220304152152635"></p><h2 id="springcloud组件"><a href="#springcloud组件" class="headerlink" title="springcloud组件"></a>springcloud组件</h2><ul><li>服务注册与发现<ul><li>EUREKA</li></ul></li></ul><h2 id="springcloud中文网"><a href="#springcloud中文网" class="headerlink" title="springcloud中文网"></a>springcloud中文网</h2><p><a href="https://www.springcloud.cc/">spirngcloud</a></p><h1 id="Eureka"><a href="#Eureka" class="headerlink" title="Eureka"></a>Eureka</h1><ol><li>什么是服务治理？</li></ol><ul><li>eureka中application 字段与 服务的application name  相同</li></ul><p><img src="/.io//image-20220308112955737.png" alt="image-20220308112955737"></p><h2 id="eureka集群"><a href="#eureka集群" class="headerlink" title="eureka集群"></a>eureka集群</h2><ul><li><p>eureka服务器之间相互注册</p></li><li><p>服务在多个eureka上注册</p></li></ul><h2 id="微服务集群"><a href="#微服务集群" class="headerlink" title="微服务集群"></a>微服务集群</h2><ul><li>服务名称相同，服务器或者端口不同</li><li>消费者使用服务名称去请求</li><li>restTemplate 作负载均衡</li></ul><h2 id="actuator-服务信息显示"><a href="#actuator-服务信息显示" class="headerlink" title="actuator 服务信息显示"></a>actuator 服务信息显示</h2><ul><li><p>主机名称的修改</p><ul><li><p>默认显示机器名称+项目名称+端口号</p></li><li><p>```yml<br>instance-id: payment8001</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 访问信息有ip地址</span><br><span class="line"></span><br><span class="line">  * ```yml</span><br><span class="line">    prefer-ip-address: true</span><br></pre></td></tr></table></figure></li><li><p> <img src="/.io//image-20220309115309930.png" alt="image-20220309115309930"></p></li></ul></li></ul><h2 id="获取薇服务信息"><a href="#获取薇服务信息" class="headerlink" title="获取薇服务信息"></a>获取薇服务信息</h2><p>主启动类上添加 @EnableDiscoveryClient注解</p><p>获取服务信息：使用import org.springframework.cloud.client.discovery.DiscoveryClient;这个类</p><p>获取具体服务实例信息：使用DiscoveryClient.getinstances</p><h2 id="Eureka的自我保护机制"><a href="#Eureka的自我保护机制" class="headerlink" title="Eureka的自我保护机制"></a>Eureka的自我保护机制</h2><ul><li><p>自我保护机制的原因</p><ul><li>防止微服务因为与eureka服务器暂时不连通，而导致eureka服务器将微服务删除</li><li>宁可保留错误的信息，也不会盲目注销服务</li></ul></li><li><p>配置</p><ul><li><p>eureka服务端</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">enable-self-preservation:</span> <span class="literal">false</span> <span class="comment"># 关闭自我保护机制</span></span><br><span class="line"><span class="attr">eviction-interval-timer-in-ms:</span> <span class="number">2000</span> <span class="comment">#超时2s后驱逐服务</span></span><br></pre></td></tr></table></figure></li><li><p>eureka客户端</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">2</span> <span class="comment"># 发送心跳的间隔，每2秒发送一次</span></span><br><span class="line"><span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">9</span> <span class="comment">#eureka 最后一次收到心跳，之后的等待时间</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h1><h2 id="linux-安装zookeeper"><a href="#linux-安装zookeeper" class="headerlink" title="linux 安装zookeeper"></a>linux 安装zookeeper</h2><p><strong>配置文件说明</strong></p><p> <img src="/.io//image-20220309154802184.png" alt="image-20220309154802184"></p><h2 id="安装zookeeper遇到的问题"><a href="#安装zookeeper遇到的问题" class="headerlink" title="安装zookeeper遇到的问题"></a>安装zookeeper遇到的问题</h2><ol><li><p>服务启动成功，查看状态却是失败状态，客户端也连接不上</p><blockquote><p>原因是：没有安装jdk环境</p></blockquote></li></ol><h2 id="springcloud整合zookeeper遇到的问题"><a href="#springcloud整合zookeeper遇到的问题" class="headerlink" title="springcloud整合zookeeper遇到的问题"></a>springcloud整合zookeeper遇到的问题</h2><p>zookeeper版本与jar包中引用的版本不兼容</p><blockquote><p>解决方法；排除依赖，手动引入适合版本的依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--先排除自带的zookeeper3.5.3--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="zookeeper-策略"><a href="#zookeeper-策略" class="headerlink" title="zookeeper 策略"></a>zookeeper 策略</h2><ul><li>zookeeper节点是临时节点</li><li>薇服务挂了， 一定时间内会保留</li></ul><h2 id="zookeeper集群"><a href="#zookeeper集群" class="headerlink" title="zookeeper集群"></a>zookeeper集群</h2><blockquote><p>配置过程</p></blockquote><h1 id="consul"><a href="#consul" class="headerlink" title="consul"></a>consul</h1><h2 id="consul-中文网"><a href="#consul-中文网" class="headerlink" title="consul 中文网"></a>consul 中文网</h2><ul><li><a href="https://www.springcloud.cc/spring-cloud-consul.html">consul 中文网</a></li></ul><h2 id="consul-安装"><a href="#consul-安装" class="headerlink" title="consul  安装"></a>consul  安装</h2><p><a href="https://www.consul.io/downloads">下载地址</a></p><blockquote><p>解压命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip consul_1.11.4_linux_amd64.zip</span><br></pre></td></tr></table></figure><blockquote><p>启动命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">consul agent -data-dir=/usr/<span class="built_in">local</span>/software/consul-1.11.4/data -<span class="built_in">bind</span>=192.168.112.128 -server -bootstrap -client -ui -client=0.0.0.0 </span><br><span class="line"><span class="comment">##</span></span><br><span class="line">consul agent -data-dir=/usr/<span class="built_in">local</span>/software/consul-1.11.4/data -<span class="built_in">bind</span>=192.168.112.128 -client=0.0.0.0 </span><br><span class="line"><span class="comment">##</span></span><br><span class="line">./consul agent -dev -ui -node=consul-dev -client=192.168.112.128 -server</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">./consul agent -dev -ui -node=consul-dev -client=0.0.0.0 -server</span><br></pre></td></tr></table></figure><p>-data-dir consul数据目录<br>-bind 绑定ip地址<br>-server 代表以服务的方式启动<br>-bootstrap 指定自己为leader而不需要选举<br>-ui 启动一个内置管理的web界面<br>-client 指定客户端可以访问的IP。设置为0.0.0.0则任意访问，否则默认本机才可以访问。</p><h2 id="整合consul遇到的问题"><a href="#整合consul遇到的问题" class="headerlink" title="整合consul遇到的问题"></a>整合consul遇到的问题</h2><h3 id="at-lease-one-health-check-on-one-instance-is-failing"><a href="#at-lease-one-health-check-on-one-instance-is-failing" class="headerlink" title="at lease one health check on one instance is failing"></a>at lease one health check on one instance is failing</h3><blockquote><p>问题描述</p></blockquote><p> <img src="/.io//image-20220311104216161.png" alt="image-20220311104216161"></p><p>错误</p><p><img src="/.io//image-20220311110448714.png" alt="image-20220311110448714"></p><blockquote><p><a href="https://blog.csdn.net/qq_2662385590/article/details/107883199">解决方案</a></p></blockquote><p>在application.yaml 文件中开启心跳，默认是关闭的</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-provider-consul</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br><span class="line">        <span class="comment">#hostname: localhost</span></span><br><span class="line">        <span class="attr">heartbeat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启心跳</span></span><br></pre></td></tr></table></figure><h2 id="consul-配置详解"><a href="#consul-配置详解" class="headerlink" title="consul 配置详解"></a>consul 配置详解</h2><p><a href="https://my.oschina.net/suveng/blog/4768711">配置site</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.9</span><span class="number">.233</span> <span class="comment"># ip</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span> <span class="comment"># 端口</span></span><br><span class="line">      <span class="attr">discovery:</span> <span class="comment"># consul 注册中心</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">zuul-service</span> <span class="comment">#注册在consul上面的名字，在consul的调用中，是通过此名字调用的</span></span><br><span class="line">        <span class="attr">register-health-check:</span> <span class="literal">true</span> <span class="comment">#健康检查，保证服务处于启动状态，建议开启</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;:$&#123;spring.cloud.client.ip-address&#125;</span> <span class="comment"># 服务id</span></span><br><span class="line">        <span class="attr">health-check-url:</span> <span class="string">http://$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;/actuator/health</span> <span class="comment"># 健康检查的URI</span></span><br><span class="line">        <span class="attr">tags:</span> <span class="comment"># 标签,这个属性是个list,所以用yml的list的格式注入</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">gateway</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">common</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">other</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">firstboot</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 服务发现是否启动</span></span><br><span class="line">        <span class="attr">management-tags:</span> <span class="comment"># 注册管理服务时使用的标记,默认是management</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">sss</span></span><br><span class="line">        <span class="comment"># health-check-path: /health/check # 要调用以进行运行状况检查的备用服务器路径,已经使用health-check-url覆盖了,所以这属性暂时找不到有什么用处</span></span><br><span class="line">        <span class="attr">health-check-interval:</span> <span class="string">10s</span> <span class="comment"># 字符串,执行运行状况检查的频率（例如10秒），默认为10秒。</span></span><br><span class="line">        <span class="attr">health-check-timeout:</span> <span class="string">10s</span> <span class="comment"># 健康检查超时（例如10秒）。</span></span><br><span class="line">        <span class="attr">health-check-critical-timeout:</span> <span class="string">30s</span> <span class="comment"># 注销关键服务的时间, 要求consul的版本在1.0.7或者更高</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#  ip 偏好; 这个必须配 在注册过程中使用ip地址而不是主机名</span></span><br><span class="line">        <span class="attr">prefer-agent-address:</span> <span class="literal">false</span> <span class="comment"># 来源,我们将如何确定使用的地址</span></span><br><span class="line">        <span class="comment"># ip-address: 192.168.9.233 # 访问服务时要使用的IP地址（还必须设置要使用的首选IP地址）</span></span><br><span class="line">        <span class="comment"># hostname: # Hostname to use when accessing server</span></span><br><span class="line">        <span class="comment"># port: 8500 # Port to register the service under (defaults to listening port)</span></span><br><span class="line">        <span class="comment"># management-port: # Port to register the management service under (defaults to management port)</span></span><br><span class="line">        <span class="comment"># catalog-services-watch-delay: 1000 # 查看consul的服务更新间隔,默认1s</span></span><br><span class="line">        <span class="comment"># catalog-services-watch-timeout: 2 # 查看consul服务更新间隔的超时时间, 默认两秒</span></span><br><span class="line">        <span class="attr">query-passing:</span> <span class="literal">true</span> <span class="comment"># 这推动健康检查 pass 传递到服务器。</span></span><br><span class="line">        <span class="attr">deregister:</span> <span class="literal">false</span> <span class="comment"># 在consul禁用自动注销登记服务。</span></span><br><span class="line">        <span class="attr">fail-fast:</span> <span class="literal">true</span> <span class="comment"># *服务登记期间抛出异常如果这是真的,否则,日志警告(默认值为true)。</span></span><br><span class="line">        <span class="comment"># health-check-tls-skip-verify: true # 跳过证书校验, 如果不是则进行证书校验</span></span><br><span class="line">      <span class="attr">config:</span>   <span class="comment"># consul 配置中心</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">format:</span> <span class="string">YAML</span></span><br><span class="line">        <span class="attr">data-key:</span> <span class="string">settings.yml</span></span><br></pre></td></tr></table></figure><h1 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h1><blockquote><p>自SpringCloud 2020起，已经舍弃了ribbon</p><p>使用loadbalancer 代替</p><p>2020版本之后使用ribbon，会报没有初始化服务 的错误，引入依赖就会报错</p></blockquote><ul><li>依赖</li><li>restTemplate 的使用</li><li>负载均衡策略</li></ul><h2 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h2><ol><li><p>java.lang.IllegalStateException: No instances available for CLOUD-PAYMENT-SERVICE</p><p><img src="/.io//image-20220314095953525.png" alt="image-20220314095953525"></p><blockquote><p>原因是使用的是2020版及之后的springcloud，ribbon已经被摒弃，推荐使用loadbalancer</p></blockquote></li></ol><h2 id="Irule-组件"><a href="#Irule-组件" class="headerlink" title="Irule 组件"></a>Irule 组件</h2><h3 id="规则替换"><a href="#规则替换" class="headerlink" title="规则替换"></a>规则替换</h3><ul><li><p>添加负载均衡规则配置类（这个类不能添加在主启动类所在包及其子包下）</p></li><li><p>在主启动类上添加注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RibbonClient(name = &quot;CLOUD-PAYMENT-SERVICE&quot;, configuration = MySelfRule.class)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="自定义规则算法"><a href="#自定义规则算法" class="headerlink" title="自定义规则算法"></a>自定义规则算法</h3><h1 id="Loadbalancer"><a href="#Loadbalancer" class="headerlink" title="Loadbalancer"></a>Loadbalancer</h1><blockquote><p>springcloud 2020 后替换ribbon</p></blockquote><h2 id="修改规则"><a href="#修改规则" class="headerlink" title="修改规则"></a>修改规则</h2><ol><li><p>创建规则配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个类不添加@configuration注解</span></span><br><span class="line"><span class="comment">// 这个类可以放在主启动类所在包及其自包下（ribbon不允许）</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomLoadBalancerConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReactorLoadBalancer&lt;ServiceInstance&gt; <span class="title">reactorLoadBalancer</span><span class="params">(Environment environment,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                                    LoadBalancerClientFactory loadBalancerClientFactory)</span> </span>&#123;</span><br><span class="line">        String name = environment.getProperty(loadBalancerClientFactory.PROPERTY_NAME);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RandomLoadBalancer(</span><br><span class="line">                loadBalancerClientFactory.getLazyProvider(name, ServiceInstanceListSupplier.class),name</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将配置类设置给使用负载均衡的配置类里restTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@LoadBalancerClient(name = &quot;CLOUD-PAYMENT-SERVICE&quot;, configuration = CustomLoadBalancerConfiguration.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>这里就将负载均衡规则从默认的轮询修改为randomRule</p></li></ol><h1 id="OpenFeign"><a href="#OpenFeign" class="headerlink" title="OpenFeign"></a>OpenFeign</h1><blockquote><p>官网： <a href="https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/#feign-logging">https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/#feign-logging</a></p></blockquote><h2 id="基本整合使用"><a href="#基本整合使用" class="headerlink" title="基本整合使用"></a>基本整合使用</h2><h2 id="超时控制"><a href="#超时控制" class="headerlink" title="超时控制"></a>超时控制</h2><blockquote><p>默认只等待1秒，超时会报错</p></blockquote><p>2020版openfeign超时配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">default:</span> <span class="comment"># 这里就是指的所有被加载的默认FeignClient实现的服务配置都生效</span></span><br><span class="line">        <span class="attr">connectTimeout:</span> <span class="number">1000</span></span><br><span class="line">        <span class="attr">readTimeout:</span> <span class="number">2000</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">CLOUD-PAYMENT-SERVICE:</span> <span class="comment">#对单个服务FeignClient的配置</span></span><br><span class="line">        <span class="attr">connectTimeout:</span> <span class="number">1000</span></span><br><span class="line">        <span class="attr">readTimeout:</span> <span class="number">5000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="打印日志"><a href="#打印日志" class="headerlink" title="打印日志"></a>打印日志</h2><blockquote><p>yaml 中的配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启日志打印</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.wangzhe.springcloud.service.PaymentFeign:</span> <span class="string">debug</span></span><br><span class="line"><span class="comment"># 设置打印级别</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">CLOUD-PAYMENT-SERVICE:</span></span><br><span class="line">        <span class="attr">connectTimeout:</span> <span class="number">1000</span></span><br><span class="line">        <span class="attr">readTimeout:</span> <span class="number">5000</span></span><br><span class="line">        <span class="attr">loggerLevel:</span> <span class="string">BASIC</span> <span class="comment">#只打印请求的一些信息</span></span><br></pre></td></tr></table></figure><blockquote><p>日志级别信息</p></blockquote><ul><li><code>NONE</code>, 不记录（<strong>默认</strong>）。</li><li><code>BASIC</code>, 只记录请求方法和 URL 以及响应状态码和执行时间。</li><li><code>HEADERS</code>, 记录基本信息以及请求和响应标头。</li><li><code>FULL</code>, 记录请求和响应的标头、正文和元数据。</li></ul><h1 id="Hystrix"><a href="#Hystrix" class="headerlink" title="Hystrix"></a>Hystrix</h1><h2 id="服务降级"><a href="#服务降级" class="headerlink" title="服务降级"></a>服务降级</h2><blockquote><p>服务降级一般放在客户端，当然是可以放在服务端的</p></blockquote><ul><li>当发生服务不可用时，使用兜底方案<ul><li>服务器超时</li><li>服务器异常错误</li><li>服务器宕机</li><li>服务熔断</li></ul></li></ul><blockquote><p>服务提供者 编码配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在主启动类上添加@EnableHystrix</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderHystrixMain8001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ProviderHystrixMain8001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在降级服务上添加 @HystrixCommand</span></span><br><span class="line"> <span class="meta">@HystrixCommand(fallbackMethod = &quot;timeoutHandler&quot;, commandProperties = &#123;</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;execution.isolation.thread.timeoutInMilliseconds&quot;,value = &quot;3000&quot;)</span></span><br><span class="line"><span class="meta">    &#125; )</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeout</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*try &#123;</span></span><br><span class="line"><span class="comment">            TimeUnit.SECONDS.sleep(5);</span></span><br><span class="line"><span class="comment">        &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">            e.printStackTrace();</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;线程： &quot;</span>+ Thread.currentThread().getName() + <span class="string">&quot; timeout , id: &quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeoutHandler</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;线程： &quot;</span>+ Thread.currentThread().getName() + <span class="string">&quot; 超时或者异常处理 timeoutHandler , id: &quot;</span> + id;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>消费者客户端编码配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加@EnableHystrix</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerHystrixMain80</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerHystrixMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置降级服务</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/get/timeout/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@HystrixCommand(fallbackMethod = &quot;timeoutHandler&quot;, commandProperties = &#123;</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;execution.isolation.thread.timeoutInMilliseconds&quot;,value = &quot;1500&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeout</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentClientService.timeout(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeoutHandler</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;消费者服务降级：服务器超时，或者异常错误, id: &quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="设置默认服务降级"><a href="#设置默认服务降级" class="headerlink" title="设置默认服务降级"></a>设置默认服务降级</h2><blockquote><p>没有特别指定降级方法，就会使用全局降级方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在类上添加@DefaultProperties，设置全局降级方法</span></span><br><span class="line"><span class="meta">@DefaultProperties(defaultFallback = &quot;globalHandler&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentController</span></span></span><br><span class="line"><span class="class">// 在需要降级的方法上添加 @<span class="title">HystrixCommand</span> ,没有特别指定降级方法，就会使用全局降级方法  </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    @<span class="title">GetMapping</span>(&quot;/<span class="title">get</span>/<span class="title">ok</span>/</span>&#123;id&#125;<span class="string">&quot;)</span></span><br><span class="line"><span class="string">    @HystrixCommand</span></span><br><span class="line"><span class="string">    public String ok(@PathVariable(&quot;</span>id<span class="string">&quot;) Integer id) &#123;</span></span><br><span class="line"><span class="string">        int i = 10/0;</span></span><br><span class="line"><span class="string">        return paymentClientService.ok(id);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="feign-和-hystrix-结合使用"><a href="#feign-和-hystrix-结合使用" class="headerlink" title="feign 和 hystrix 结合使用"></a>feign 和 hystrix 结合使用</h2><blockquote><p>开启feign 对 hystrix的支持</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">circuitbreaker:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>设置fallback降级</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在@FeignClient添加服务降级配置类</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;CLOUD-PROVIDER-HYSTRIX&quot;, fallback = PaymentClientImpl.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PaymentClientService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/payment/hystrix/get/ok/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">ok</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/payment/hystrix/get/timeout/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeout</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务降级类是继承了接口</span></span><br><span class="line"><span class="comment">//需要将它加入容器中</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaymentClientImpl</span> <span class="keyword">implements</span> <span class="title">PaymentClientService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">ok</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;新版本设置的fallback,ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">timeout</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;新版本设置的fallback,timeout&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="服务熔断"><a href="#服务熔断" class="headerlink" title="服务熔断"></a>服务熔断</h2><p>降级(open)—满足一定的熔断条件—》熔断（closed）—经过休眠窗口时间—》缓慢放行（half open）—如果仍然不行—》重置休眠窗口时间</p><blockquote><p>熔断服务配置</p><p>hystrix熔断参数，还有其他的，去看阳哥视频中有61</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;circuitBreakerFallback&quot;, commandProperties = &#123;</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;circuitBreaker.enabled&quot;, value = &quot;true&quot;), //开启熔断器</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;circuitBreaker.requestVolumeThreshold&quot;, value = &quot;10&quot;), //请求次数</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;circuitBreaker.sleepWindowInMilliseconds&quot;, value = &quot;10000&quot;), // 快照时间窗口</span></span><br><span class="line"><span class="meta">            @HystrixProperty(name = &quot;circuitBreaker.errorThresholdPercentage&quot;, value = &quot;60&quot;), //失败百分比</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br></pre></td></tr></table></figure><h2 id="服务限流"><a href="#服务限流" class="headerlink" title="服务限流"></a>服务限流</h2><h2 id="服务监控（目前只能在在服务中监控，不能将服务监控与服务分开）"><a href="#服务监控（目前只能在在服务中监控，不能将服务监控与服务分开）" class="headerlink" title="服务监控（目前只能在在服务中监控，不能将服务监控与服务分开）"></a>服务监控（目前只能在在服务中监控，不能将服务监控与服务分开）</h2><blockquote><p>hystrix-dashboard</p><p><a href="http://localhost:9001/hystrix">http://localhost:9001/hystrix</a></p></blockquote><blockquote><ol><li>引入依赖</li></ol></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--hystrix-dashboard--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>配置启动类</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span>  <span class="comment">//添加注解，启动支持</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HystrixDashboardMain9001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(HystrixDashboardMain9001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>访问路径</li></ol></blockquote><p><a href="http://localhost:9001/hystrix">http://localhost:9001/hystrix</a></p><blockquote><ol start="4"><li>被监控程序配置要求</li></ol></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/.io//image-20220317102218065.png" alt="image-20220317102218065"></p><h3 id="采坑解决"><a href="#采坑解决" class="headerlink" title="采坑解决"></a>采坑解决</h3><blockquote><p>问题1:</p></blockquote><blockquote><p>访问：<a href="http://localhost:8001/hystrix.stream">http://localhost:8001/hystrix.stream</a></p></blockquote><p><img src="/.io//image-20220317100622682.png" alt="image-20220317100622682"></p><blockquote><p>解决</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean&lt;HystrixMetricsStreamServlet&gt; <span class="title">getServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HystrixMetricsStreamServlet streamServlet = <span class="keyword">new</span> HystrixMetricsStreamServlet();</span><br><span class="line">ServletRegistrationBean&lt;HystrixMetricsStreamServlet&gt; registrationBean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(streamServlet);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一启动就加载</span></span><br><span class="line">registrationBean.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 添加url</span></span><br><span class="line">registrationBean.addUrlMappings(<span class="string">&quot;/hystrix.stream&quot;</span>);</span><br><span class="line"><span class="comment">// 设置名称</span></span><br><span class="line">registrationBean.setName(<span class="string">&quot;HystrixMetricsStreamServlet&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> registrationBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>问题二：Unable to connect to Command Metric Stream.</p></blockquote><p><img src="/.io//image-20220317101602911.png" alt="image-20220317101602911"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span>-<span class="number">03</span>-<span class="number">17</span> 09:<span class="number">28</span>:<span class="number">56.338</span>  WARN <span class="number">23840</span> --- [nio-<span class="number">9001</span>-exec-<span class="number">4</span>] ashboardConfiguration$ProxyStreamServlet : Origin parameter: http:<span class="comment">//localhost:8001/hystrix.stream is not in the allowed list of proxy host names.  If it should be allowed add it to hystrix.dashboard.proxyStreamAllowList.</span></span><br></pre></td></tr></table></figure><blockquote><p>解决</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hystrix:</span><br><span class="line">  dashboard:</span><br><span class="line">    proxy-stream-allow-list: &quot;*&quot;</span><br></pre></td></tr></table></figure><h1 id="网关服务"><a href="#网关服务" class="headerlink" title="网关服务"></a>网关服务</h1><h2 id="为什么要添加网关？"><a href="#为什么要添加网关？" class="headerlink" title="为什么要添加网关？"></a>为什么要添加网关？</h2><ol><li>只暴露网关地址接口，隐藏保护服务的地址接口</li></ol><h1 id="Zuul"><a href="#Zuul" class="headerlink" title="Zuul"></a>Zuul</h1><h1 id="Gateway"><a href="#Gateway" class="headerlink" title="Gateway"></a>Gateway</h1><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><blockquote><ol><li>引入依赖</li></ol></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springcloud gateway--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>application.yaml 配置</li></ol></blockquote><p><strong>配置路由</strong></p><ol><li>yaml配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-gateway-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span> <span class="comment"># 配置路由</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">http://localhost:8001</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/hystrix/**</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>配置类方式</li></ol><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h3><p>是将路由的映射写死</p><blockquote><p>配置类配置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GateWayConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RouteLocator <span class="title">customRouteLocator</span><span class="params">(RouteLocatorBuilder routeLocatorBuilder)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> routeLocatorBuilder.routes()</span><br><span class="line">                .route(<span class="string">&quot;path_route&quot;</span>,r -&gt; r.path(<span class="string">&quot;/exclusive&quot;</span>)</span><br><span class="line">                        .uri(<span class="string">&quot;https://world.huanqiu.com/exclusive&quot;</span>))</span><br><span class="line">                .route(<span class="string">&quot;test2&quot;</span>,r -&gt; r.path(<span class="string">&quot;/article&quot;</span>)</span><br><span class="line">                        .uri(<span class="string">&quot;https://world.huanqiu.com/article&quot;</span>))</span><br><span class="line">                .route(<span class="string">&quot;test3&quot;</span>,r -&gt; r.path(<span class="string">&quot;/world&quot;</span>)</span><br><span class="line">                        .uri(<span class="string">&quot;https://news.cctv.com/world/&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><ul><li>uri 如果添加了 path，路由器导航栏还是原来的链接；</li><li>uri不添加path，路由器会拼接后 跳转到目标链接，导航栏链接会更新</li></ul><blockquote><p>配置文件配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-gateway-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">http://localhost:8001</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/hystrix/**</span></span><br></pre></td></tr></table></figure><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><p>动态路由是通过服务名称 去 注册中心去获取ip：port；</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-gateway-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启动态路由</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">http://localhost:8001</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/hystrix/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">dynamic-route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://cloud-payment-service</span>  <span class="comment">#使用服务名称</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/**</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>总结领悟</p></blockquote><p>客户直接发来的请求使用网关做负载均衡，</p><p>服务之间的调用，使用ribbon，loadbalancer,openfeign 做负载均衡</p><h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><p>9中断言工厂</p><h3 id="After"><a href="#After" class="headerlink" title="After"></a>After</h3><p>在xxxxx时间之前访问</p><blockquote><p>时间格式获取</p><p>2022-03-21T10:49:53.861+08:00[Asia/Shanghai]</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ZonedDateTime zonedDateTime = ZonedDateTime.now();</span><br><span class="line">        System.out.println(zonedDateTime);</span><br><span class="line">        <span class="comment">//2022-03-21T10:49:53.861+08:00[Asia/Shanghai]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h3 id="GateWayfilter（单个）"><a href="#GateWayfilter（单个）" class="headerlink" title="GateWayfilter（单个）"></a>GateWayfilter（单个）</h3><h3 id="GlobalFilter-全局"><a href="#GlobalFilter-全局" class="headerlink" title="GlobalFilter(全局)"></a>GlobalFilter(全局)</h3><blockquote><p>案例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLogGateWayFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line">        String uname = exchange.getRequest().getQueryParams().getFirst(<span class="string">&quot;uname&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(uname == <span class="keyword">null</span>) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;uname = null, 非法闯入，消灭入侵者&quot;</span>);</span><br><span class="line">            exchange.getResponse().setStatusCode(HttpStatus.NOT_ACCEPTABLE);</span><br><span class="line">            <span class="keyword">return</span> exchange.getResponse().setComplete();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="采坑记录"><a href="#采坑记录" class="headerlink" title="采坑记录"></a>采坑记录</h2><blockquote><p>问题1：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Spring MVC found on classpath, which is incompatible with Spring Cloud Gateway at <span class="keyword">this</span> time. Please remove spring-boot-starter-web dependency.</span><br></pre></td></tr></table></figure><blockquote><p>解决方案</p></blockquote><p>gateway 网关不需要springMVC，移除spring-boot-starter-web依赖</p><h1 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>spring-cloud-config 推荐与 git整合使用</p><blockquote><p>配置中心的配置文件命名方式必须是 <strong>application-profile.yaml</strong></p></blockquote><h3 id="基本配置-1"><a href="#基本配置-1" class="headerlink" title="基本配置"></a>基本配置</h3><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springcloud-config-server--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--eureka-client--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>启动类配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigCenterMain3344</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConfigCenterMain3344.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>application.yaml配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-center</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://github.com/CodeWolfs/spring-cloud-config.git</span> <span class="comment">#这里使用http链接，使用ssh错误没有解决</span></span><br><span class="line">          <span class="attr">search-paths:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">spring-cloud-config</span></span><br><span class="line"><span class="comment">#          username: 2546972682@qq.com</span></span><br><span class="line"><span class="comment">#          password: wasdsxy5210.</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#配置默认的分支</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="springcloud的访问规则"><a href="#springcloud的访问规则" class="headerlink" title="springcloud的访问规则"></a>springcloud的访问规则</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.properties</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>{application} 就是应用名称，对应到配置文件上来，就是配置文件的名称部分，例如我上面创建的配置文件。</p></li><li><p>{profile} 就是配置文件的版本，我们的项目有开发版本、测试环境版本、生产环境版本，对应到配置文件上来就是以 application-{profile}.yml 加以区分，例如application-dev.yml、application-sit.yml、application-prod.yml。</p></li><li><p>{label} 表示 git 分支，默认是 master 分支，如果项目是以分支做区分也是可以的，那就可以通过不同的 label 来控制访问不同的配置文件了。</p></li></ul><h3 id="采坑记录-1"><a href="#采坑记录-1" class="headerlink" title="采坑记录"></a>采坑记录</h3><blockquote><p>问题1</p></blockquote><p><strong>This application has no explicit mapping for /error, so you are seeing this as a fallback</strong></p><p><img src="/.io//image-20220322103523771.png" alt="image-20220322103523771"></p><blockquote><p>解决方案：</p></blockquote><p>uri使用http链接，不要使用ssh链接</p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><blockquote><p>bootstrap.yaml 文件了解，以及与application.yaml文件的比较</p></blockquote><p>bootstrap.yaml, 是系统级的，启动的时候会根据配置加载application.yaml</p><p>application.yaml,是用户级的。</p><h3 id="基本配置-2"><a href="#基本配置-2" class="headerlink" title="基本配置"></a>基本配置</h3><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springcloud-config-client--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里与config服务器不同--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--eureka-client--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--bootstrap.yaml 需要--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>启动类配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigClientMain3355</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConfigClientMain3355.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>bootstrap.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3355</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-client</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://config3344.com:3344</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="采坑记录-2"><a href="#采坑记录-2" class="headerlink" title="采坑记录"></a>采坑记录</h3><ol><li><p>问题一</p><blockquote><p>org.springframework.cloud.commons.ConfigDataMissingEnvironmentPostProcessor$ImportException: No spring.config.import set</p></blockquote><p><strong>解决方案</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--bootstrap.yaml 需要这个依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="配置动态刷新"><a href="#配置动态刷新" class="headerlink" title="配置动态刷新"></a>配置动态刷新</h2><p>按照上述的配置后，在github更新配置后，客户端获取不到最新的配置，需要服务器获取到配置，之后客户端才可以获取到配置。</p><h2 id="手动刷新"><a href="#手动刷新" class="headerlink" title="手动刷新"></a>手动刷新</h2><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>bootstrap.yaml 配置暴露</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>在控制器上添加@RefreshScope注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/config/info&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigInfoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;config.info&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/get&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getConfigInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(configInfo);</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在git上的配置更新之后，需要以post的方式访问  “<a href="http://localhost:3355/actuator/refresh&quot;">http://localhost:3355/actuator/refresh&quot;</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST <span class="string">&quot;http://localhost:3355/actuator/refresh&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="自动刷新"><a href="#自动刷新" class="headerlink" title="自动刷新"></a>自动刷新</h2><p>整合bus实现自动刷新</p><blockquote><p><strong>设计思路</strong></p></blockquote><ol><li>发送给微服务个体，有微服务个体想蠕虫病毒一样，相互发送</li><li>发送给配置中心，有配置中心通知所有微服务</li></ol><p>这里我们选择使用第二种方法，微服务应该职责单一，不应该承担多余的不属于他的内容</p><h4 id="基本配置-3"><a href="#基本配置-3" class="headerlink" title="基本配置"></a>基本配置</h4><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--监控包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--bootstrap.yaml 需要--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yaml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-center</span></span><br><span class="line">  <span class="comment">#rabbitmq 配置</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment"># 配置中心配置</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://github.com/CodeWolfs/spring-cloud-config.git</span></span><br><span class="line">          <span class="attr">search-paths:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">spring-cloud-config</span></span><br><span class="line"><span class="comment">#          username: 2546972682@qq.com</span></span><br><span class="line"><span class="comment">#          password: wasdsxy5210.</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line"><span class="comment">#暴露bus-refresh，刷新使用</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;busrefresh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="comment">#客户端配置</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-client</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span></span><br><span class="line"><span class="comment">#客户端不需要暴露端口，但是必须添加@RefreshScope注解</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>客户端在需要更新的类上添加<code>@RefreshScope</code>注解</p></li><li><p>git更新后，运维人员以post方式发送<a href="http://localhost:3344/actuator/busrefresh">http://localhost:3344/actuator/busrefresh</a> ，这里需要注意新版本发送的是busrefresh,中间没有-。</p></li></ol><h4 id="局部通知"><a href="#局部通知" class="headerlink" title="局部通知"></a>局部通知</h4><p>上述是全局通知，下面来说一下局部通知的方式</p><p><a href="http://localhost:3344/actuator/busrefresh/%7Bservice-name%7D:%7Bport%7D">http://localhost:3344/actuator/busrefresh/{service-name}:{port}</a></p><p><strong>ex:</strong></p><p><strong>刷新单个端口</strong></p><p><a href="http://localhost:3344/actuator/busrefresh/cloud-config-client:3355">http://localhost:3344/actuator/busrefresh/cloud-config-client:3355</a></p><p><strong>刷新多个端口</strong></p><p><a href="http://localhost:3344/actuator/busrefresh/cloud-config-client:%7B3355,3366%7D">http://localhost:3344/actuator/busrefresh/cloud-config-client:{3355,3366}</a></p><h4 id="采坑记录-3"><a href="#采坑记录-3" class="headerlink" title="采坑记录"></a>采坑记录</h4><blockquote><p>以post请求发送 <a href="http://localhost:3344/actuator/bus-refresh">http://localhost:3344/actuator/bus-refresh</a> ， 报404错误</p></blockquote><p><img src="/.io//image-20220323093820513.png" alt="image-20220323093820513"></p><p><strong>解决方法</strong></p><p>新版本bus-ampq,使用busrefresh,中间不加 “ **-**”</p><p><img src="/.io//image-20220323094039502.png" alt="image-20220323094039502"></p><h1 id="Bus"><a href="#Bus" class="headerlink" title="Bus"></a>Bus</h1><p>Bus 只支持 RabbitMQ 和 kafka</p><h2 id="查看config中自动刷新内容"><a href="#查看config中自动刷新内容" class="headerlink" title="查看config中自动刷新内容"></a>查看config中自动刷新内容</h2><h1 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h1><p><a href="https://www.cnblogs.com/java-spring/p/14539407.html">rabbitmq 整合</a></p><p>stream 3.1 以后推荐使用函数式编程取代注解，例如@enablebinding();</p><h2 id="使用rabbitmq"><a href="#使用rabbitmq" class="headerlink" title="使用rabbitmq"></a>使用rabbitmq</h2><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-stream-rabbit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置application.yaml 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">rabbitmq:</span> <span class="comment">#这里添加rabbitmq配置，是因为不加的话会报链接拒绝的问题</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">stream-rabbitmq-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">stream:</span></span><br><span class="line">      <span class="attr">binders:</span></span><br><span class="line">      <span class="comment"># 消费者环境配置</span></span><br><span class="line">        <span class="attr">consumerRabbit:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">rabbit</span></span><br><span class="line">          <span class="attr">environment:</span></span><br><span class="line">            <span class="attr">spring:</span></span><br><span class="line">              <span class="attr">rabbitmq:</span></span><br><span class="line">                <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">                <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">                </span><br><span class="line">        <span class="attr">defaultRabbit:</span> <span class="comment">#是声明binder属性，声明使用的是什么消息中间件，以及配置中间件环境，defaultRabbit是配置名称，在binddings中使用default-binder</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">rabbit</span></span><br><span class="line">          <span class="attr">environment:</span></span><br><span class="line">            <span class="attr">spring:</span></span><br><span class="line">              <span class="attr">rabbitmq:</span></span><br><span class="line">                <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.112</span><span class="number">.128</span></span><br><span class="line">                <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">bindings:</span></span><br><span class="line">        <span class="attr">output:</span> <span class="comment">#生产者管道channel，发送消息需要使用，output 是对象名</span></span><br><span class="line">          <span class="attr">destination:</span> <span class="string">studyExchange</span></span><br><span class="line">          <span class="attr">content-type:</span> <span class="string">application/json</span></span><br><span class="line">          <span class="attr">default-binder:</span> <span class="string">defaultRabbit</span></span><br><span class="line">          </span><br><span class="line">        <span class="attr">input:</span> <span class="comment">#消费者channel</span></span><br><span class="line">          <span class="attr">destination:</span> <span class="string">studyExchange</span></span><br><span class="line">          <span class="attr">content-type:</span> <span class="string">application/json</span></span><br><span class="line">          <span class="attr">default-binder:</span> <span class="string">consumerRabbit</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">rabbitmq-provider</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">rabbitmq-provider</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>编码</p><ol><li><p>生产者编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@EnableBinding(Source.class)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageProviderImpl</span> <span class="keyword">implements</span> <span class="title">MessageProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MessageChannel output; <span class="comment">//output需要和配置文件中的一样</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">send</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = UUID.randomUUID().toString();</span><br><span class="line">        <span class="keyword">boolean</span> send = output.send(MessageBuilder.withPayload(s).build());</span><br><span class="line">        log.info(s);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>消费者编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@EnableBinding(Sink.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReciveMessageController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverPort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@StreamListener(&quot;input&quot;)</span> <span class="comment">//这里试了使用其他的名称，不可以，好像只能使用input</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reciveMessage</span><span class="params">(Message&lt;String&gt; message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;消费者1： &quot;</span> + message.getPayload() + <span class="string">&quot;\tport:&quot;</span> + serverPort);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="重复消费和消息持久化"><a href="#重复消费和消息持久化" class="headerlink" title="重复消费和消息持久化"></a>重复消费和消息持久化</h2><p><strong>上述配置的问题</strong></p><p><img src="/.io//image-20220324110553925.png" alt="image-20220324110553925"></p><h3 id="重复消费"><a href="#重复消费" class="headerlink" title="重复消费"></a>重复消费</h3><p>使用group分组解决这个问题</p><p>这个group实际上在rabbitmq就是队列的意思，在没有指定的情况下，每个消费者都有一个队列，也就是说系统会为每个消费者创建一个队列（如果不指定的话）</p><p>所以如果需要避免重复消费问题，就将消费者放在同一组下就可以了。</p><p><strong>设置的group，durable=true</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个分组绑定只能在消费者端进行，因为系统会由此确定你的消费者绑定的是哪个队列</span></span><br><span class="line">    <span class="attr">bindings:</span></span><br><span class="line">        <span class="attr">input:</span></span><br><span class="line">          <span class="attr">destination:</span> <span class="string">studyExchange</span></span><br><span class="line">          <span class="attr">content-type:</span> <span class="string">application/json</span></span><br><span class="line">          <span class="attr">default-binder:</span> <span class="string">consumerRabbit</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">wangzheB</span> <span class="comment"># 配置分组</span></span><br></pre></td></tr></table></figure><h3 id="消息持久化"><a href="#消息持久化" class="headerlink" title="消息持久化"></a>消息持久化</h3><blockquote><p>假设情况</p></blockquote><p>消费者A和消费者B是同一组的消费者，使用同一group，在两台消费者停机后，删除或者修改消费者A的分组，</p><p>此时生产者一直在往这个group里面发送消息，发送了N条消息</p><p>此时启动消费者A，消费者A 获取不到任何消息，会错过消息</p><p>此时启动消费者B，消费者B仍然可以获取到全部消息</p></li></ol><p>​        </p><h2 id="rabbitmq整合-采坑"><a href="#rabbitmq整合-采坑" class="headerlink" title="rabbitmq整合 采坑"></a>rabbitmq整合 采坑</h2><ol><li><p>3.1后很多注解推荐使用函数式编程代替</p></li><li><p>rabbitmq的链接信息需要配置两次，一次是stream的enviroment，一次是在spring下配置rabbitmq</p><ol><li>这个是没有问题的，是environment写错了，导致配置配有读取到。</li></ol><p><img src="/.io//image-20220323171602305.png" alt="image-20220323171602305"></p></li><li></li></ol><h1 id="Sleuth-And-Zipkin"><a href="#Sleuth-And-Zipkin" class="headerlink" title="Sleuth And  Zipkin"></a>Sleuth And  Zipkin</h1><p>sleuth 是实现</p><p>zipkin 是展示</p><p><a href="https://github.com/openzipkin/zipkin">zipkin下载地址</a></p><p><strong>zipkin启动命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar zipkin-server-2.23.16-exec.jar</span><br></pre></td></tr></table></figure><p>服务链路跟踪</p><h2 id="基本配置-4"><a href="#基本配置-4" class="headerlink" title="基本配置"></a>基本配置</h2><ol><li><p>在需要监控的服务中 引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--不适用这个依赖了--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--现在使用这两个依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-sleuth<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-sleuth-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>微服务<code>application.yaml</code>配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-payment-service</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://127.0.0.1:9411</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="number">1</span>  <span class="comment">#采样率，0-1之间，一般是0.5</span></span><br></pre></td></tr></table></figure></li><li><p>效果图</p><p><img src="/.io//image-20220324152725524.png" alt="image-20220324152725524"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习使用记录</title>
      <link href="/2022/03/02/Linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/03/02/Linux%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>查看进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep redis</span><br></pre></td></tr></table></figure><blockquote><p>查看端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lanp | grep 6379</span><br></pre></td></tr></table></figure><h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><blockquote><p>查看开通的端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><blockquote><p>打开防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><blockquote><p>关闭防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><blockquote><p>禁止防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><blockquote><p>查看防火墙状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld </span><br></pre></td></tr></table></figure><h1 id="冷知识"><a href="#冷知识" class="headerlink" title="冷知识"></a>冷知识</h1><ul><li>linux自带jre环境</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx使用记录</title>
      <link href="/2022/02/28/Nginx%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/28/Nginx%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-重要概念"><a href="#Nginx-重要概念" class="headerlink" title="Nginx 重要概念"></a>Nginx 重要概念</h1><h2 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h2><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><h1 id="Nginx-linux下安装"><a href="#Nginx-linux下安装" class="headerlink" title="Nginx linux下安装"></a>Nginx linux下安装</h1><h1 id="Nginx-常用命令"><a href="#Nginx-常用命令" class="headerlink" title="Nginx 常用命令"></a>Nginx 常用命令</h1><blockquote><p>nginx命令所在路径</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/software/nginx-1.20.2/sbin</span><br></pre></td></tr></table></figure><blockquote><p>查看版本号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -v</span><br></pre></td></tr></table></figure><blockquote><p>查看nginx进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><blockquote><p>停止nginx</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s stop</span><br></pre></td></tr></table></figure><blockquote><p>启动nginx</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br></pre></td></tr></table></figure><blockquote><p>重新加载 nginx</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><h1 id="Nginx-配置文件"><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a>Nginx 配置文件</h1><blockquote><p>配置文件位置</p></blockquote><p><strong>/usr/local/software/nginx-1.20.2/conf/nginx.conf</strong></p><blockquote><p>配置文件内容详解</p></blockquote><h2 id="第一部分：全局块"><a href="#第一部分：全局块" class="headerlink" title="第一部分：全局块"></a>第一部分：全局块</h2><p>配置nginx 服务器整体运行的一些指令：用户组、日志、进程pid、nginx进程数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义Nginx运行的用户和用户组</span></span><br><span class="line"><span class="string">user</span> <span class="string">www</span> <span class="string">www;</span></span><br><span class="line"><span class="comment">#nginx进程数，建议设置为等于CPU总核心数。</span></span><br><span class="line"><span class="string">worker_processes</span> <span class="number">8</span><span class="string">;</span></span><br><span class="line"><span class="comment">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line"><span class="string">error_log</span> <span class="string">/usr/local/nginx/logs/error.log</span> <span class="string">info;</span></span><br><span class="line"><span class="comment">#进程pid文件</span></span><br><span class="line"><span class="string">pid</span> <span class="string">/usr/local/nginx/logs/nginx.pid;</span></span><br></pre></td></tr></table></figure><h2 id="第二部分：events块"><a href="#第二部分：events块" class="headerlink" title="第二部分：events块"></a>第二部分：events块</h2><p>配置nginx服务器与用户的网络连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接最大数</span></span><br><span class="line">worker_connections  1024;</span><br></pre></td></tr></table></figure><h2 id="第三部分：http块"><a href="#第三部分：http块" class="headerlink" title="第三部分：http块"></a>第三部分：http块</h2><p>http块中包含 <strong>http全局块</strong> 和 <strong>server块</strong></p><h3 id="http全局块"><a href="#http全局块" class="headerlink" title="http全局块"></a>http全局块</h3><h3 id="server块"><a href="#server块" class="headerlink" title="server块"></a>server块</h3><p>server块中包含 <strong>server全局块</strong> 和 <strong>location块</strong></p><h4 id="server全局块"><a href="#server全局块" class="headerlink" title="server全局块"></a>server全局块</h4><h4 id="location块"><a href="#location块" class="headerlink" title="location块"></a>location块</h4><blockquote><p>proxy_pass   路径;</p></blockquote><blockquote><p>路径匹配规则</p></blockquote><h2 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h2><h2 id="动静分离配置"><a href="#动静分离配置" class="headerlink" title="动静分离配置"></a>动静分离配置</h2><blockquote><p>location 中的root,index  ,autoindex</p></blockquote><h1 id="nginx-高可用集群"><a href="#nginx-高可用集群" class="headerlink" title="nginx 高可用集群"></a>nginx 高可用集群</h1><blockquote><p>2台nginx服务器</p><p>2台服务器安装keepalived</p></blockquote><h2 id="keepalived-配置文件"><a href="#keepalived-配置文件" class="headerlink" title="keepalived 配置文件"></a>keepalived 配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL<span class="comment"># 路由，您的服务器中配置的dns映射，在etc/host文件中查看</span></span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER<span class="comment">#主服务器MASTER,备份服务器BACKUP</span></span><br><span class="line">    interface eth0<span class="comment">#网卡</span></span><br><span class="line">    virtual_router_id 51<span class="comment">#主备机的值要一致</span></span><br><span class="line">    priority 100<span class="comment">#优先级，一般主服务器设置100 ， 备份服务器要&lt;100</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;<span class="comment"># 认证校验</span></span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16<span class="comment">#虚拟IP地址</span></span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="nginx-原理"><a href="#nginx-原理" class="headerlink" title="nginx 原理"></a>nginx 原理</h1><p>master 和 work </p><p>一个master ；多个worker</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 使用记录</title>
      <link href="/2022/02/28/SpringBoot-%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/28/SpringBoot-%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot中提示Could-not-autowire-No-beans-of-‘xxx’-type-found和Unable-to-find-a-SpringBootC-的解决办法"><a href="#SpringBoot中提示Could-not-autowire-No-beans-of-‘xxx’-type-found和Unable-to-find-a-SpringBootC-的解决办法" class="headerlink" title="SpringBoot中提示Could not autowire. No beans of ‘xxx’ type found和Unable to find a @SpringBootC..的解决办法"></a>SpringBoot中提示Could not autowire. No beans of ‘xxx’ type found和Unable to find a @SpringBootC..的解决办法</h1><blockquote><p>问题描述</p></blockquote><p>@autowired  爆红的一种情况</p><p>没有将springboot的启动类放在包的根目录中</p><blockquote><p>解决方法</p></blockquote><p>将SpringBoot的启动类放到项目包的根目录下</p><p> <img src="/.io//image-20220228103017651.png" alt="image-20220228103017651"></p><p><a href="https://blog.csdn.net/u013347451/article/details/94415181">原文链接</a></p><h1 id="springboot整合oracle问题"><a href="#springboot整合oracle问题" class="headerlink" title="springboot整合oracle问题"></a>springboot整合oracle问题</h1><h2 id="java-sql-SQLException-不支持的字符集-在类路径中添加-orai18n-jar-ZHS16GBK"><a href="#java-sql-SQLException-不支持的字符集-在类路径中添加-orai18n-jar-ZHS16GBK" class="headerlink" title="java.sql.SQLException: 不支持的字符集 (在类路径中添加 orai18n.jar): ZHS16GBK"></a>java.sql.SQLException: 不支持的字符集 (在类路径中添加 orai18n.jar): ZHS16GBK</h2><blockquote><p>问题描述</p></blockquote><p>使用mybatis 代码生成器时遇到这个问题</p><blockquote><p>解决方法</p></blockquote><p>导入 orai18n.jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.easyproject<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>orai18n<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;orai18n.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL使用记录</title>
      <link href="/2022/02/28/MySQL%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/28/MySQL%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="报错1140-In-aggregated-query-without-GROUP-BY-expression-1-of-SELECT-list-contains-nonaggreg"><a href="#报错1140-In-aggregated-query-without-GROUP-BY-expression-1-of-SELECT-list-contains-nonaggreg" class="headerlink" title="报错1140 - In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggreg"></a>报错1140 - In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggreg</h1><blockquote><p>解决方法</p></blockquote><p><a href="https://blog.csdn.net/weixin_43849590/article/details/109032710">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用的工具</title>
      <link href="/2022/02/21/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/02/21/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="图片压缩工具"><a href="#图片压缩工具" class="headerlink" title="图片压缩工具"></a>图片压缩工具</h1><ul><li><p><a href="https://saerasoft.com/caesium/">caesium</a></p><p><img src="/.io//image-20220221145835788.png" alt="image-20220221145835788"></p></li></ul><h1 id="json工具、加密解密、网络等等工具网站"><a href="#json工具、加密解密、网络等等工具网站" class="headerlink" title="json工具、加密解密、网络等等工具网站"></a>json工具、加密解密、网络等等工具网站</h1><ul><li><p><a href="https://www.bejson.com/enc/md5dsc/">BEJSON</a></p><img src="/.io//image-20220228095232243.png" alt="image-20220228095232243" style="zoom:80%;"></li><li><p><a href="https://www.fly63.com/tool/home.html">FLY63</a></p><img src="/.io//image-20220228095341058.png" alt="image-20220228095341058" style="zoom:80%;"></li><li><p><a href="https://tool.lu/">Tool.lu</a></p><p><img src="/.io//image-20220304151112548.png" alt="image-20220304151112548"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora使用记录</title>
      <link href="/2022/02/21/typora%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/21/typora%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="typora-设置高亮，扩展语法"><a href="#typora-设置高亮，扩展语法" class="headerlink" title="typora 设置高亮，扩展语法"></a>typora 设置高亮，扩展语法</h1><p><img src="/.io//image-20220221143206302.png" alt="image-20220221143206302"></p><h1 id="设置typora的主题"><a href="#设置typora的主题" class="headerlink" title="设置typora的主题"></a>设置typora的主题</h1><p>在文件-》偏好设置-》外观-》 打开主题文件夹，<code>.css</code>文件是主题文件，可以自定义修改</p><p><a href="http://theme.typora.io/">主题market</a></p><p> <img src="/.io//image-20220221143351901.png" alt="image-20220221143351901"></p><h1 id="修改引用块颜色"><a href="#修改引用块颜色" class="headerlink" title="修改引用块颜色"></a>修改引用块颜色</h1><blockquote><p>在主题配置文件中修改</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#53e873</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#777777</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好看的渐变色搭配</title>
      <link href="/2022/02/21/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2%E6%90%AD%E9%85%8D/"/>
      <url>/2022/02/21/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%B8%90%E5%8F%98%E8%89%B2%E6%90%AD%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>top_img: ‘linear-gradient(45deg,#ccfbff,#ef96c5)’</p></blockquote><p> <img src="/.io//image-20220221134907313.png" alt="image-20220221134907313"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#EAD6EE,#A0F1EA)’</p></blockquote><p><img src="/.io//image-20220221135037734.png" alt="image-20220221135037734"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#eebd89,#d13abd)’</p></blockquote><p><img src="/.io//image-20220221135514949.png" alt="image-20220221135514949"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#f9957f,#f2f5d0)’</p></blockquote><p><img src="/.io//image-20220221135539575.png" alt="image-20220221135539575"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#eae5c9,#6cc6cb)’</p></blockquote><p><img src="/.io//image-20220221135616895.png" alt="image-20220221135616895"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#ef33b1,#f6e6bc)’</p></blockquote><p><img src="/.io//image-20220221135638175.png" alt="image-20220221135638175"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#9fa5d5,#e8f5c8)’</p></blockquote><p><img src="/.io//image-20220221135658589.png" alt="image-20220221135658589"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#c973ff,#aebaf8)’</p></blockquote><p><img src="/.io//image-20220221135721020.png" alt="image-20220221135721020"></p><blockquote><p>top_img: ‘linear-gradient(45deg,#0c7bb3,#f2bae8)’</p></blockquote><p><img src="/.io//image-20220221135745835.png" alt="image-20220221135745835"></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
          <category> 渐变色 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渐变色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令</title>
      <link href="/2022/02/21/git%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/21/git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>添加文件到暂存区</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add ***</span><br></pre></td></tr></table></figure><blockquote><p>提交文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;commment&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>查看文件状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用记录</title>
      <link href="/2022/02/21/git%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/21/git%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="gitkeep-文件"><a href="#gitkeep-文件" class="headerlink" title=".gitkeep 文件"></a>.gitkeep 文件</h1><blockquote><p>.gitkeep 文件描述</p></blockquote><p>git默认不追踪空文件夹，如果想要上传空文件夹，需要添加.gitkeep文件</p><p><strong>git会忽略lib下的文件并保留lib文件夹</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lib/*</span><br><span class="line">!.gitkeep</span><br></pre></td></tr></table></figure><h1 id="git-add-xxx后仍然爆红-是未跟踪状态"><a href="#git-add-xxx后仍然爆红-是未跟踪状态" class="headerlink" title="git add xxx后仍然爆红 是未跟踪状态"></a>git add xxx后仍然爆红 是未跟踪状态</h1><blockquote><p>解决方法</p></blockquote><p>目标文件夹下 有一个.git 文件夹，删除就可以解决</p>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLSQL使用记录</title>
      <link href="/2022/02/21/PLSQL%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/02/21/PLSQL%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="ORA-12505-TNS-listener-does-not-currently-know-of-SID-given-in-connect-descriptor"><a href="#ORA-12505-TNS-listener-does-not-currently-know-of-SID-given-in-connect-descriptor" class="headerlink" title="ORA-12505,TNS:listener does not currently know of SID given in connect descriptor"></a>ORA-12505,TNS:listener does not currently know of SID given in connect descriptor</h1><blockquote><p>问题描述</p></blockquote><p>监听服务配置文件没有生效</p><blockquote><p>解决方法</p></blockquote><p>右击-任务管理器-服务-OracleServiceORCL 运行重启Oracle</p><p> <img src="/.io//image-20220221103908931.png" alt="image-20220221103908931"></p><p><a href="https://blog.csdn.net/wl_ldy/article/details/8012992">原文链接</a></p><h1 id="配置-监听程序和服务"><a href="#配置-监听程序和服务" class="headerlink" title="配置 监听程序和服务"></a>配置 监听程序和服务</h1><blockquote><p>使用 Net Configuration Assistant 来配置监听程序，也可以使用 <strong>Net Manager</strong></p></blockquote><p> <img src="/.io//image-20220221104418223-16454132129321.png" alt="image-20220221104418223"></p><p> <img src="/.io//image-20220221104635922.png" alt="image-20220221104635922"></p><blockquote><p>使用 Net Manager 来管理服务程序，也可以管理监听程序</p></blockquote><p> <img src="/.io//image-20220221104535764.png" alt="image-20220221104535764"></p><p> <img src="/.io//image-20220221104958859.png" alt="image-20220221104958859"></p><blockquote><p>该程序修改的配置文件 是你环境变量中<code>TNS_ADMIN</code>配置的 </p><p>默认是 <strong>C:\app\THINKPAD\product\11.2.0\dbhome_1\NETWORK\ADMIN</strong></p></blockquote><p> <img src="/.io//image-20220221105429689.png" alt="image-20220221105429689"></p><p><strong>监听和服务的配置文件</strong></p><p><img src="/.io//image-20220221105413361.png" alt="image-20220221105413361"></p><p><b style="color:red;font-size:25px;">注意：</b></p><blockquote><p>在修改完配置文件后，需要重启服务才能生效</p></blockquote><p>右击-任务管理器-服务-OracleServiceORCL 运行重启Oracle</p>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PLSQL </tag>
            
            <tag> question </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle特性</title>
      <link href="/2022/02/20/Oracle%E7%89%B9%E6%80%A7/"/>
      <url>/2022/02/20/Oracle%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><p>存储过程的一些知识，测试、入参</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p> <img src="/.io//image-20220221092538826.png" alt="image-20220221092538826"></p><blockquote><p>入参clob类型</p></blockquote><p>将clob类型改为String类型</p><p> <img src="/.io//image-20220221092704423.png" alt="image-20220221092704423"></p><p> 直接使用String字符串测试</p><p> <img src="/.io//image-20220221092740869.png" alt="image-20220221092740869"></p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><blockquote><p>获取uuid</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--函数返回的是32位 </span></span><br><span class="line"><span class="comment">--可以使用字符串分隔获取自己想要的位数</span></span><br><span class="line">sys_guid()</span><br></pre></td></tr></table></figure><h1 id="序列-Sequence"><a href="#序列-Sequence" class="headerlink" title="序列(Sequence)"></a>序列(Sequence)</h1><blockquote><p>创建序列</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE SEQ_DEMO INCREMENT BY 1 START WITH 1 NOMAXvalue NOCYCLE NOCACHE;</span><br></pre></td></tr></table></figure><ol><li><p>语法</p><blockquote><p>CREATE SEQUENCE 序列名 [相关参数]</p></blockquote></li><li><p>参数说明</p><blockquote><p>INCREMENT BY :序列变化的步进，负值表示递减。(默认1)<br>START WITH:序列的初始值 。(默认1)<br>MAXvalue:序列可生成的最大值。(默认不限制最大值，NOMAXVALUE)<br>MINVALUE:序列可生成的最小值。(默认不限制最小值，NOMINVALUE)<br>CYCLE:用于定义当序列产生的值达到限制值后是否循环(NOCYCLE:不循环，CYCLE:循环)。<br>CACHE:表示缓存序列的个数，数据库异常终止可能会导致序列中断不连续的情况，默认值为20，如果不使用缓存可设置NOCACHE</p></blockquote></li><li><p>修改、删除序列</p><blockquote><p>使用 <code>alter</code> 命令进行修改</p><p>使用 <code>drop</code> 命令删除</p></blockquote></li></ol><blockquote><p>使用序列</p></blockquote><ul><li><p>currval</p><ul><li><code>currval</code> 表示序列的当前值，新序列必须使用一次<code>nextval</code> 才能获取到值，否则会报错</li></ul></li><li><p>nextval</p><ul><li><code>nextval</code> 表示序列的下一个值。新序列首次使用时获取的是该序列的初始值，从第二次使用时开始按照设置的步进递增</li></ul></li></ul><blockquote><p>查询序列的值：select seq_name.[currval,nextval] from dual;<br>查看所有已创建的序列：select * from user_sequences<br>SQL语句中使用：insert into table (id) values (seq_name.nextval)</p></blockquote><h2 id="PLSQL图像化操作"><a href="#PLSQL图像化操作" class="headerlink" title="PLSQL图像化操作"></a>PLSQL图像化操作</h2><p> <img src="/.io//image-20220221095508801.png" alt="image-20220221095508801"></p><h1 id="包概念"><a href="#包概念" class="headerlink" title="包概念"></a>包概念</h1><p> <img src="/.io//image-20220221095735510.png" alt="image-20220221095735510"></p><p>包下有存储过程、函数、类型、变量等等。调用时使用<strong>包名.变量名</strong></p><h2 id="PLSQL下编辑包下存储过程"><a href="#PLSQL下编辑包下存储过程" class="headerlink" title="PLSQL下编辑包下存储过程"></a>PLSQL下编辑包下存储过程</h2><p> <img src="/.io//image-20220221100021421.png" alt="image-20220221100021421"></p><p>左边是声明语句，右边是body，修改完要重新编译</p><p> <img src="/.io//image-20220221100147575.png" alt="image-20220221100147575"></p><h1 id="Database-link"><a href="#Database-link" class="headerlink" title="Database link"></a>Database link</h1><p>oracle在进行跨库访问时，可以通过创建dblink实现,创建dblink，以及通过dblink完成插入、修改、删除等操作。</p><blockquote><p>创建dblink</p></blockquote><ul><li><p>使用sql创建</p><blockquote><p>语法</p><p><strong>create public database link linekName connect to username identified by “password” USING ‘dbname’</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 示例</span><br><span class="line">create public database link TESTLINK2 connect to test identified by &quot;123456&quot; USING &#x27;ORCL2&#x27;</span><br></pre></td></tr></table></figure></li><li><p>使用plsql图形创建</p><p> <img src="/.io//image-20220221102129811.png" alt="image-20220221102129811"></p></li></ul><blockquote><p>使用dblink</p></blockquote><p><strong>表名@link名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># VARCHAR2是字节还是字符</span><br><span class="line"></span><br><span class="line">varchar2(20) 中的20 表示20个字节</span><br><span class="line"></span><br><span class="line">&gt; oracle中varchar2(20) 汉字 占位 跟字符集设置有关</span><br><span class="line">&gt;</span><br><span class="line">&gt; * 字符集设置成ZHS16GBK：汉字占2个字节。</span><br><span class="line">&gt;</span><br><span class="line">&gt; * 字符集设置成AL32UTF8：汉字占3个字节。</span><br><span class="line"></span><br><span class="line">```plsql</span><br><span class="line">-- 查询字符集</span><br><span class="line">select * from v$nls_parameters t where t.PARAMETER=&#x27;NLS_CHARACTERSET&#x27;;</span><br></pre></td></tr></table></figure><p> <img src="/.io//image-20220228100421049.png" alt="image-20220228100421049"></p><h1 id="decode函数显示不全问题"><a href="#decode函数显示不全问题" class="headerlink" title="decode函数显示不全问题"></a>decode函数显示不全问题</h1><blockquote><p>描述</p></blockquote><p>decode的判断结果没有全部显示</p><p> <img src="/.io//image-20220228101002250.png" alt="image-20220228101002250"></p><blockquote><p>解决方法</p></blockquote><ol><li>在decode后面的第一个判断条件结果表达式 多加几位字符</li></ol><h1 id="条件判断函数-case-when-then-else"><a href="#条件判断函数-case-when-then-else" class="headerlink" title="条件判断函数 case-when-then-else"></a>条件判断函数 case-when-then-else</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> --第一种格式</span><br><span class="line"> select case aae100</span><br><span class="line">          when &#x27;1&#x27; then</span><br><span class="line">           &#x27;有效有&#x27;</span><br><span class="line">          when &#x27;0&#x27; then</span><br><span class="line">           &#x27;无效&#x27;</span><br><span class="line">          else</span><br><span class="line">           &#x27;导入&#x27;</span><br><span class="line">        end</span><br><span class="line">   from rc11;</span><br><span class="line">--第二种格式</span><br><span class="line">select case</span><br><span class="line">         when aae100 = &#x27;1&#x27; then</span><br><span class="line">          &#x27;有效aa&#x27;</span><br><span class="line">         when aae100 = &#x27;0&#x27; then</span><br><span class="line">          &#x27;无效&#x27;</span><br><span class="line">         else</span><br><span class="line">          &#x27;导入&#x27;</span><br><span class="line">       end</span><br><span class="line">  from rc11;</span><br></pre></td></tr></table></figure><blockquote><p>问题：</p><ul><li>使用判断函数后 表达式结果显示不全</li></ul><p>解决方法：</p><ul><li>在第一判断条件后多加1位中文字符，相当于两字节字符</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> DBSM </category>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DBSM </tag>
            
            <tag> Oracle </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对称加密、非对称加密、私钥、公钥</title>
      <link href="/2022/02/20/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E3%80%81%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E3%80%81%E7%A7%81%E9%92%A5%E3%80%81%E5%85%AC%E9%92%A5/"/>
      <url>/2022/02/20/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E3%80%81%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E3%80%81%E7%A7%81%E9%92%A5%E3%80%81%E5%85%AC%E9%92%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="加密技术描述"><a href="#加密技术描述" class="headerlink" title="加密技术描述"></a>加密技术描述</h1><p>加密技术有对称加密和非对称加密，对称加密只有一个密钥，问题是如何安全的传送密钥，常见的对称加密技术有AES、DES；非对称加密技术有两个密钥：私钥和公钥，问题是中间人的攻击问题，常见的非对称加密技术有RSA、DSA;加密技术在之后的博文中讨论。</p><h1 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h1><p>对称加密只有一个密钥，加密和解密使用一个密钥，问题是如何安全的传送密钥。</p><h1 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h1><p>非对称加密会有两个密钥，公钥和私钥，一般密钥的创建者持有私钥，信息的接受者持有公钥；私钥只有一份，公钥可以分发给很多人。</p><blockquote><p>私钥持有者发送给公钥消息 ，要求消息不能被篡改，可以被盗取，公钥很多人拥有，可以被很多个人知道，消息不需要保密。</p></blockquote><p>私钥持有者 -&gt; 使用私钥加签并发送一份源消息 -&gt;公钥持有者 使用公钥验签并与附带的元消息比对。</p><blockquote><p>公钥持有者 发送给 私钥消息，要求消息必须保密，私钥只有一份，所以只有私钥持有者可见。</p></blockquote><p>公钥持有者-&gt; 使用公钥加密发送消息 -&gt; 私钥持有者 使用私钥解密</p><h1 id="对称加密-与-非对称加密比较"><a href="#对称加密-与-非对称加密比较" class="headerlink" title="对称加密 与 非对称加密比较"></a>对称加密 与 非对称加密比较</h1><table><thead><tr><th align="center">加密类型</th><th align="center">常见算法</th><th align="center">加密速度</th><th align="center">遇到的问题</th><th align="center">解决方法</th></tr></thead><tbody><tr><td align="center">对称加密</td><td align="center">AES、DES</td><td align="center">快</td><td align="center">密钥配送问题</td><td align="center">面对面交换或者使用非对称加密配送</td></tr><tr><td align="center">非对称加密</td><td align="center">RSA、DSA</td><td align="center">慢</td><td align="center">中间人攻击问题</td><td align="center">通过证书中心来解决中间人攻击问题</td></tr></tbody></table><h1 id="加密-网站"><a href="#加密-网站" class="headerlink" title="加密 网站"></a>加密 网站</h1><p><a href="https://www.bejson.com/">加密工具网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 加密技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非对称加密 </tag>
            
            <tag> 对称加密 </tag>
            
            <tag> 公钥 </tag>
            
            <tag> 私钥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SecureFX中文乱码</title>
      <link href="/2022/02/20/SecureFX%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
      <url>/2022/02/20/SecureFX%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>问题描述</p></blockquote><p>secureFX 文件列表显示乱码</p><p> <img src="/.io//watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NDA0MjU4,size_16,color_FFFFFF,t_70.png" alt="img"></p><blockquote><p>解决方法</p></blockquote><p>修改全局配置文件中 <strong>“Filenames Always Use UTF8”=00000001</strong></p><ol><li><p>全局配置文件路径</p><p> <img src="/.io//image-20220220181420806.png" alt="image-20220220181420806"></p></li><li><p>进入session目录，找到对应的ini文件</p><p> <img src="/.io//image-20220220181524504.png" alt="image-20220220181524504"></p></li><li><p>修改 <strong>Filenames Always Use UTF8</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:<span class="attr">&quot;Filenames Always Use UTF8&quot;</span>=<span class="number">00000001</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
          <category> SecureFX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
            <tag> SecureFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7开启端口</title>
      <link href="/2022/02/20/centos7%E5%BC%80%E5%90%AF%E7%AB%AF%E5%8F%A3/"/>
      <url>/2022/02/20/centos7%E5%BC%80%E5%90%AF%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>开启端口 15672</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=15672/tcp --permanent</span><br></pre></td></tr></table></figure><blockquote><p>重启防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br><span class="line">或者</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><blockquote><p>查看端口的状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=15672/tcp</span><br></pre></td></tr></table></figure><blockquote><p>关闭防火墙</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service </span><br></pre></td></tr></table></figure><blockquote><p>查看端口占用状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp|grep 15672</span><br></pre></td></tr></table></figure><blockquote><p>查看开放端口列表</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> centos7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq学习</title>
      <link href="/2022/02/16/rabbitmq%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/02/16/rabbitmq%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="消息模型"><a href="#消息模型" class="headerlink" title="消息模型"></a>消息模型</h1><h2 id="基本消息模型"><a href="#基本消息模型" class="headerlink" title="基本消息模型"></a>基本消息模型</h2><p>一个生产者，一个队列，一个消费者</p><h2 id="work消息模型"><a href="#work消息模型" class="headerlink" title="work消息模型"></a>work消息模型</h2><p>能者多劳，默认是平均分配</p><p>这里是设置的消费者的消费策略，多个消费者消费一个队列</p><blockquote><p>通过 BasicQos 方法设置prefetchCount = 1。这样RabbitMQ就会使得每个Consumer在同一个时间点最多处理1个Message。换句话说，在接收到该Consumer的ack前，他它不会将新的Message分发给它。相反，它会将其分派给不是仍然忙碌的下一个Consumer。</p><p>值得注意的是：prefetchCount在手动ack的情况下才生效，自动ack不生效。<br>————————————————<br>版权声明：本文为CSDN博主「kavito」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/kavito/article/details/91403659">https://blog.csdn.net/kavito/article/details/91403659</a></p></blockquote><h2 id="Publish-subscribe（交换机类型：Fanout，也称为广播-）"><a href="#Publish-subscribe（交换机类型：Fanout，也称为广播-）" class="headerlink" title="Publish/subscribe（交换机类型：Fanout，也称为广播 ）"></a><strong>Publish/subscribe（交换机类型：</strong>Fanout，也称为广播 <strong>）</strong></h2><h2 id="Routing-路由模型（交换机类型：direct）"><a href="#Routing-路由模型（交换机类型：direct）" class="headerlink" title="Routing 路由模型（交换机类型：direct）"></a>Routing 路由模型（交换机类型：direct）</h2><h1 id="Topics-通配符模式（交换机类型：topics）"><a href="#Topics-通配符模式（交换机类型：topics）" class="headerlink" title="Topics 通配符模式（交换机类型：topics）"></a>Topics 通配符模式（交换机类型：topics）</h1><h1 id="交换机类型"><a href="#交换机类型" class="headerlink" title="交换机类型"></a>交换机类型</h1><blockquote><p>Fanout：广播，将消息交给所有绑定到交换机的队列</p><p>Direct：定向，把消息交给符合指定routing key 的队列</p><p>Topic：通配符，把消息交给符合routing pattern（路由模式） 的队列</p><p>Header：header模式与routing不同的地方在于，header模式取消routingkey，使用header中的 key/value（键值对）匹配队列。<br>————————————————<br>版权声明：本文为CSDN博主「kavito」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/kavito/article/details/91403659">https://blog.csdn.net/kavito/article/details/91403659</a></p></blockquote><p><strong>Exchange（交换机）只负责转发消息，不具备存储消息的能力</strong>，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失！</p><h2 id="Fanout"><a href="#Fanout" class="headerlink" title="Fanout"></a>Fanout</h2><h2 id="Direct"><a href="#Direct" class="headerlink" title="Direct"></a>Direct</h2><h2 id="Topic"><a href="#Topic" class="headerlink" title="Topic"></a>Topic</h2><h2 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h2><h1 id="手动ACK"><a href="#手动ACK" class="headerlink" title="手动ACK"></a>手动ACK</h1>]]></content>
      
      
      <categories>
          
          <category> Message Queue </category>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq 命令</title>
      <link href="/2022/02/16/rabbitmq-%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/02/16/rabbitmq-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>重启服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重启服务</span></span><br></pre></td></tr></table></figure><blockquote><p>启动服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-server -detached</span><br></pre></td></tr></table></figure><blockquote><p>关闭服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl stop</span><br></pre></td></tr></table></figure><blockquote><p>查看服务状态</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Message Queue </category>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用</title>
      <link href="/2022/01/30/Butterfly%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/30/Butterfly%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="创建menu"><a href="#创建menu" class="headerlink" title="创建menu"></a>创建menu</h1><blockquote><p>创建分类</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new page archives <span class="comment">#时间轴</span></span><br><span class="line">hexo new page tags <span class="comment">#标签</span></span><br><span class="line">hexo new page categories <span class="comment">#分类</span></span><br><span class="line">hexo new page music <span class="comment">#音乐</span></span><br><span class="line">hexo new page Gallery <span class="comment">#照片</span></span><br><span class="line">hexo new page movies <span class="comment">#电影</span></span><br><span class="line">hexo new page link <span class="comment">#友链</span></span><br><span class="line">hexo new page about <span class="comment">#关于</span></span><br></pre></td></tr></table></figure><blockquote><p>_config.butterfly.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">清单||fa</span> <span class="attr">fa-heartbeat:</span></span><br><span class="line">    <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="string">照片:</span> <span class="string">/Gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line">    <span class="string">电影:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><h1 id="代码高亮显示"><a href="#代码高亮显示" class="headerlink" title="代码高亮显示"></a>代码高亮显示</h1><blockquote><p>_config.butterfly.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">light</span></span><br></pre></td></tr></table></figure><h1 id="主页文章节选"><a href="#主页文章节选" class="headerlink" title="主页文章节选"></a>主页文章节选</h1><blockquote><p>选项</p></blockquote><ol><li>description： 只显示description</li><li>both： 优先选择description，如果没有配置description，则显示自动节选的内容</li><li>auto_excerpt：只显示自动节选</li><li>false： 不显示文章内容</li></ol><blockquote><p>_config.butterfly.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure><p>description 在 front-matter中添加</p><h1 id="文章顶部图"><a href="#文章顶部图" class="headerlink" title="文章顶部图"></a>文章顶部图</h1><blockquote><p>如果不显示顶部图，_config.butterfly.yml 中  disable_top_img：true</p></blockquote><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E4%B8%BB%E9%A0%81%E6%96%87%E7%AB%A0%E7%AF%80%E9%81%B8-%E8%87%AA%E5%8B%95%E7%AF%80%E9%81%B8%E5%92%8C%E6%96%87%E7%AB%A0%E9%A0%81description">配置中的其他值</a></p><blockquote><p>文章 front-matter 中 配置top_img</p></blockquote><p><a href="https://butterfly.js.org/posts/4aa8abbe/#%E9%A0%82%E9%83%A8%E5%9C%96">配置中的值</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">top_img:</span> <span class="literal">false</span> <span class="comment"># 不显示图片</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">orange</span> <span class="comment"># 显示颜色</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">&#x27;linear-gradient(20deg, #0062be, #925696, #cc426e, #fb0347)&#x27;</span> <span class="comment"># 显示渐变色</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">img链接</span> <span class="comment"># 显示图片，这个图片的路径是从根目录拼接的，如果要放在本地，就要放在主题的配置静态资源中，使用图床解决</span></span><br></pre></td></tr></table></figure><h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><blockquote><p>直接在文章的front-matter区域里添加sticky: 1属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p></blockquote><h1 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h1><blockquote><p>文章的markdown文档上,在Front-matter添加cover,并填上要显示的图片地址</p></blockquote><blockquote><p>配置默认的cover</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># 是否显示文章封面</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 封面显示的位置</span></span><br><span class="line">  <span class="comment"># 三个值可配置 left , right , both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="comment"># 当没有设置cover时，默认的封面显示</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><blockquote><p>使用本地图片</p></blockquote><p>在source 创建一个resources 存放静态资源，应用路径/resources/img’name.jsp</p><h1 id="文章推送"><a href="#文章推送" class="headerlink" title="文章推送"></a>文章推送</h1><blockquote><p>主题配置文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># 显示推荐文章数目</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># or created or updated 文章日期显示创建日或者更新日</span></span><br></pre></td></tr></table></figure><h1 id="文章分页按钮"><a href="#文章分页按钮" class="headerlink" title="文章分页按钮"></a>文章分页按钮</h1><p>false 不显示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># post_pagination (分页)</span></span><br><span class="line"><span class="comment"># value: 1 || 2 || false</span></span><br><span class="line"><span class="comment"># 1: The &#x27;next post&#x27; will link to old post</span></span><br><span class="line"><span class="comment"># 2: The &#x27;next post&#x27; will link to new post</span></span><br><span class="line"><span class="comment"># false: disable pagination</span></span><br><span class="line"><span class="attr">post_pagination:</span> <span class="literal">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h1><p>头像保存在source/resources目录下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/resources/avatar.jpg</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span> <span class="comment"># 是否旋转</span></span><br></pre></td></tr></table></figure><h1 id="复制相关配置"><a href="#复制相关配置" class="headerlink" title="复制相关配置"></a>复制相关配置</h1><blockquote><p>关闭 复制有版权信息</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure><h1 id="Footer-配置"><a href="#Footer-配置" class="headerlink" title="Footer 配置"></a>Footer 配置</h1><h2 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a>博客年份</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2022</span></span><br></pre></td></tr></table></figure><h2 id="页脚自定义文本"><a href="#页脚自定义文本" class="headerlink" title="页脚自定义文本"></a>页脚自定义文本</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2022</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="string">我来到、我看见、我记录！</span></span><br></pre></td></tr></table></figure><h1 id="侧边栏配置"><a href="#侧边栏配置" class="headerlink" title="侧边栏配置"></a>侧边栏配置</h1><h2 id="访问人数-busanzi"><a href="#访问人数-busanzi" class="headerlink" title="访问人数 busanzi"></a>访问人数 busanzi</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">publish_date:</span> <span class="number">2</span><span class="string">/5/2022</span> <span class="number">00</span><span class="string">:00:00</span>  </span><br><span class="line">  <span class="comment">##网页开通时间</span></span><br><span class="line">  <span class="comment">#格式: 月/日/年 时间</span></span><br><span class="line">  <span class="comment">#也可以写成 年/月/日 时间</span></span><br></pre></td></tr></table></figure><h2 id="显示最新评论"><a href="#显示最新评论" class="headerlink" title="显示最新评论"></a>显示最新评论</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">newest_comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span><span class="comment"># 显示条数</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="number">10</span> <span class="comment"># 缓存刷新时间/min</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span> <span class="comment"># 是否显示头像</span></span><br></pre></td></tr></table></figure><h1 id="评论配置"><a href="#评论配置" class="headerlink" title="评论配置"></a>评论配置</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">Valine,Disqus</span> <span class="comment"># 使用的评论系统</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span> <span class="comment"># 评论懒加载</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># Display comment count in top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="网站美化"><a href="#网站美化" class="headerlink" title="网站美化"></a>网站美化</h1><h2 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">url(/resources/sys/bg_img.jpg)</span></span><br></pre></td></tr></table></figure><h2 id="页脚背景"><a href="#页脚背景" class="headerlink" title="页脚背景"></a>页脚背景</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer_bg:</span> <span class="string">/resources/sys/footer.jpg</span></span><br></pre></td></tr></table></figure><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="背景彩带特效"><a href="#背景彩带特效" class="headerlink" title="背景彩带特效"></a>背景彩带特效</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="鼠标点击烟花特效"><a href="#鼠标点击烟花特效" class="headerlink" title="鼠标点击烟花特效"></a>鼠标点击烟花特效</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span> <span class="comment"># -1 or 9999</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><blockquote><p>安装hexo-wordcount</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><blockquote><p>配置主题文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><blockquote><p>安装 hexo-generator-search</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><blockquote><p>_config.yaml 中配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>主题配置文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> theme </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇hexo博客</title>
      <link href="/2022/01/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/01/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">#清除静态文件</span></span><br><span class="line">hexo generate <span class="comment">#生成静态文件</span></span><br><span class="line">hexo server <span class="comment">#启动服务器</span></span><br><span class="line">hexo deploy <span class="comment">#部署到git</span></span><br><span class="line"></span><br><span class="line">hexo new <span class="string">&quot;blog&#x27;s name&quot;</span> <span class="comment">#创建一片博客</span></span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><h1 id="hexo-静态资源"><a href="#hexo-静态资源" class="headerlink" title="hexo 静态资源"></a>hexo 静态资源</h1><blockquote><p>使用hexo-asset-image</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><blockquote><p>配置</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="comment"># 不能多加其他配置</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>修改 /node_modules/hexo-asset-image/index.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">              <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="静态资源测试"><a href="#静态资源测试" class="headerlink" title="静态资源测试"></a>静态资源测试</h1><p><img src="/.io//95710723_p0.jpg" alt="95710723_p0"></p><h1 id="静态资源本地化处理"><a href="#静态资源本地化处理" class="headerlink" title="静态资源本地化处理"></a>静态资源本地化处理</h1><blockquote><p>在source下创建resources文件夹</p></blockquote><p>里面存储的是静态资源，路径是/resources</p><blockquote><p>post 文章的静态资源是在同名的文件夹下</p></blockquote><p>配置 hexo-asset-image</p><h1 id="设置hexo长期后台运行"><a href="#设置hexo长期后台运行" class="headerlink" title="设置hexo长期后台运行"></a>设置hexo长期后台运行</h1><p><a href="https://blog.csdn.net/weixin_43979133/article/details/104787865">教程链接</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/29/hello-world/"/>
      <url>/2022/01/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Download-butterfly-theme"><a href="#Download-butterfly-theme" class="headerlink" title="Download butterfly theme"></a>Download butterfly theme</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>More info: <a href="https://butterfly.js.org/posts/21cfbf15/">butterfly </a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
